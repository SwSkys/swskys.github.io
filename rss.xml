<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Black Joker</title>
        <link>https://ulovei.net/</link>
        <description>小王的部落阁,分享人生哲学,解决技术难题,爱技术,更爱生活 &amp;&amp; Love of Life</description>
        <generator>Hugo 0.77.0 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>ali@ulovei.net (LouisWang)</managingEditor>
        
        
            <webMaster>ali@ulovei.net (LouisWang)</webMaster>
        
        
            <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
        
        <lastBuildDate>Thu, 29 Apr 2021 15:28:20 &#43;0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss&#43;xml" href="https://ulovei.net/rss.xml" />
        
        
            <item>
                <title>JQuery的循环跟JS的循环</title>
                <link>https://ulovei.net/tech/jquery-foreach-and-javascrip-loop/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/jquery-foreach-and-javascrip-loop/</guid>
                <pubDate>Thu, 29 Apr 2021 09:20:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;作为一个后端开发，前端的知识当然是不可少的，今天来聊聊，前端的循环。&lt;/p&gt;
&lt;p&gt;像我们后端常用的循环就是foreach，前端的jQuery的库也提供了foreach&lt;/p&gt;
&lt;p&gt;foreach主要用到循环list 列表| array 数组 | ....&lt;/p&gt;
&lt;p&gt;今天的主角是jQuery 的 $.each 和 js 的 array.forEach() 方法&lt;/p&gt;
&lt;center&gt;&lt;h2&gt;# JavaScript forEach&lt;/h2&gt;&lt;/center&gt;
&lt;h3 id=&#34;javascript-foreach语法&#34;&gt;JavaScript forEach语法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;array.forEach(function(currentValue, index, arr), thisValue)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;参数&#34;&gt;参数&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;function(currentValue, index, arr)&lt;/td&gt;
&lt;td&gt;必需。 数组中每个元素需要调用的函数。&lt;br /&gt; 函数参数: &lt;div class=&#34;table-container&#34; style=&#34;margin:0;&#34;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;参数&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;currentValue&lt;/td&gt;&lt;td&gt;必需。当前元素&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;index&lt;/td&gt;&lt;td&gt;可选。当前元素的索引值。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;arr&lt;/td&gt;&lt;td&gt;可选。当前元素所属的数组对象。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thisValue&lt;/td&gt;
&lt;td&gt;可选。传递给函数的值一般用 &amp;quot;this&amp;quot; 值。如果这个参数为空， &amp;quot;undefined&amp;quot; 会传递给 &amp;quot;this&amp;quot; 值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;foreach-的-continue-与-break&#34;&gt;forEach() 的 continue 与 break&lt;/h3&gt;
&lt;p&gt;forEach() 本身是不支持的 continue 与 break 语句的，我们可以通过 &lt;a href=&#34;https://www.runoob.com/jsref/jsref-some.html&#34;&gt;some&lt;/a&gt; 和 &lt;a href=&#34;https://www.runoob.com/jsref/jsref-every.html&#34;&gt;every&lt;/a&gt; 来实现。
使用 &lt;strong&gt;return&lt;/strong&gt; 语句实现 &lt;strong&gt;continue&lt;/strong&gt; 关键字的效果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/1619680134.jpg&#34; alt=&#34;1619680134&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;some&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 不能为 return false
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/1619680199.jpg&#34; alt=&#34;1619680199&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;break-实现&#34;&gt;break 实现&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;every&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/1619680246.jpg&#34; alt=&#34;1619680246&#34;&gt;&lt;/p&gt;
&lt;center&gt;&lt;h2&gt;# jQuery $.foreach()&lt;/h2&gt;&lt;/center&gt;
&lt;h3 id=&#34;jquery-each语法&#34;&gt;jQuery $.each语法&lt;/h3&gt;
&lt;blockquote&gt;
&lt;h3 id=&#34;javascript-foreach语法-1&#34;&gt;JavaScript forEach语法&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;each(callback)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;概述&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;以每一个匹配的元素作为上下文来执行一个函数。

意味着，每次执行传递进来的函数时，函数中的this关键字都指向一个不同的DOM元素（每次都是一个不同的匹配元素）。而且，在每次执行函数时，都会给函数传递一个表示作为执行环境的元素在匹配的元素集合中所处位置的数字值作为参数（从零开始的整型）。 返回 &#39;false&#39; 将停止循环 (就像在普通的循环中使用 &#39;break&#39;)。返回 &#39;true&#39; 跳至下一个循环(就像在普通的循环中使用&#39;continue&#39;)。
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;callback&lt;/td&gt; 
        &lt;td&gt;Function&lt;/td&gt; 
		&lt;td&gt;V1.0&lt;/td&gt; 
   &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td colspan=&#34;3&#34;&gt;对于每个匹配的元素所要执行的函数&lt;/td&gt;    
    &lt;/tr&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;h3 id=&#34;each-的-continue-与-break&#34;&gt;$.each() 的 continue 与 break&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;each&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//continue  不能return false
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
   &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;h3 id=&#34;break-实现-1&#34;&gt;break 实现&lt;/h3&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;each&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//break  不能return true
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/jquery/">jQuery</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/tech/">Tech</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>No input file specified.</title>
                <link>https://ulovei.net/tech/no-input-file-specified/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/no-input-file-specified/</guid>
                <pubDate>Sat, 24 Apr 2021 09:20:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;如往常一样我熟练的操作LNMP 部署完系统后.&lt;/p&gt;
&lt;p&gt;在打开页面一看OJbK，关机，下钟。第二天早上收到了销售的消息，说是页面偶尔打不开，一看截图是&lt;strong&gt;No input file specified.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;瞬间感觉不敢相信，到了公司页面打开一看，的确有这样的问题。王医生熟练的打开度娘，没想到search我的问题，没想到的是，遇到这个问题的小伙伴还真不少。&lt;/p&gt;
&lt;p&gt;看完之后，貌似是php的一个文件搞的鬼 --- &lt;code&gt;.user.ini&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们看看PHP的官方怎么说 -&amp;gt;  &lt;a href=&#34;http://php.net/manual/zh/configuration.file.per-user.php&#34;&gt;传送门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大概的意思就是 ：自 PHP 5.3.0 起，PHP 支持基于每个目录的 .htaccess 风格的 INI 文件。此类文件仅被 CGI／FastCGI SAPI 处理。此功能使得 PECL 的 htscanner 扩展作废。如果使用 Apache，则用 .htaccess 文件有同样效果。&lt;/p&gt;
&lt;p&gt;这个时候就有小白举手道：表示没看懂~&lt;/p&gt;
&lt;p&gt;众所周知，php.ini是php的核心配置文件，在 PHP 启动时被读取，那么web目录的其他ini文件也是可以被php识别，官方还说了&lt;/p&gt;
&lt;p&gt;除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（$_SERVER[&#39;DOCUMENT_ROOT&#39;] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。&lt;/p&gt;
&lt;p&gt;这样说的话，所有的配置都可以被.user.ini重新配置修改？噢，买噶的！&lt;/p&gt;
&lt;p&gt;你想多了，官方还说了:&lt;/p&gt;
&lt;p&gt;在 .user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。&lt;/p&gt;
&lt;p&gt;这个时候角落的张三突然站起来说到：什么是PHPINI*模式呢？&lt;/p&gt;
&lt;p&gt;官方是这样说的：&lt;/p&gt;
&lt;p&gt;配置可被指定的范围（http://php.net/manual/zh/configuration.changes.modes.php ）&lt;/p&gt;
&lt;p&gt;这些模式决定着一个 PHP 的指令在何时何地，是否能够被设定。手册中的每个指令都有其所属的模式。例如有些指令可以在 PHP 脚本中用 &lt;strong&gt;ini_set()&lt;/strong&gt; 来设定，而有些则只能在 &lt;strong&gt;php.ini&lt;/strong&gt; 或 &lt;strong&gt;httpd.conf&lt;/strong&gt; 中。&lt;/p&gt;
&lt;p&gt;例如 &lt;strong&gt;output_buffering&lt;/strong&gt; 指令是属于 &lt;strong&gt;PHP_INI_PERDIR&lt;/strong&gt;，因而就不能用 &lt;strong&gt;ini_set()&lt;/strong&gt; 来设定。但是 &lt;strong&gt;display_errors&lt;/strong&gt; 指令是属于 PHP_INI_ALL 因而就可以在任何地方被设定，包括 &lt;strong&gt;ini_set()&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;PHPINI*模式的定义&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/**模式  含义
PHP_INI_USER    可在用户脚本（例如 ini_set()）或 Windows 注册表（自 PHP 5.3 起）以及 .user.ini 中设定
PHP_INI_PERDIR  可在 php.ini，.htaccess 或 httpd.conf 中设定
PHP_INI_SYSTEM  可在 php.ini 或 httpd.conf 中设定
PHP_INI_ALL 可在任何地方设定**/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也就是说只有&lt;code&gt;PHP_INI_USER&lt;/code&gt;模式，才可以在 &lt;code&gt;.user.ini&lt;/code&gt; 中设定，那么哪些配置可以在 &lt;code&gt;.user.ini&lt;/code&gt; 中设定呢？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;php.ini&lt;/code&gt;配置选项列表（http://php.net/manual/zh/ini.list.php ）&lt;/p&gt;
&lt;p&gt;有点意思，并不是所有的配置 &lt;code&gt;.user.ini&lt;/code&gt; 都能修改，比如 &lt;code&gt;disable_functions&lt;/code&gt; ，&lt;code&gt;upload_max_filesize&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;千年未解之谜，是不是在这里找到了答案？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;访问php页面出现“No input file specified”，尝试各种办法（https://jingyan.baidu.com/article/dca1fa6f8d623ff1a44052e8.html ） 无果，你是否开始怀疑自己人品，是否开始怀疑肾亏了，是否觉得自己这么年轻就不行了？&lt;/p&gt;
&lt;p&gt;绝望中，你是否发现你的网站目录中有个叫 .user.ini 的文件，一气之下，决定删了它，哦，没错，是个办法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;啥？ .user.ini 删不掉，是不是觉得自己真的不行了？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;[root@BlackJoker]# rm -rf .user.ini 
rm: cannot remove ‘.user.ini’: Operation not permitted
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来看一下，该文件的属性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@BlackJoker]# lsattr .user.ini 
----i--------e-- .user.ini
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;没错，文件被锁定了，不能修改，那么我们去除文件锁定属性&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@BlackJoker]# chattr -i .user.ini
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;是不是可以删除了，你是不是喜极而泣，啊，自己终于又行了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;哎，旁边的李四可能觉得自己又不行了，怎么还是“No input file specified”啊？
年轻人，别着急，看看官方吧（http://php.net/manual/zh/configuration.file.per-user.php ）。
user_ini.cache_ttl 控制着重新读取用户 INI 文件的间隔时间。默认是 300 秒（5 分钟）。 
.....
5分钟艰难的过去了，你是否再一次喜极而泣：哎，自己终究还是行了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;.user.ini有什么用呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;好奇请猛戳 &lt;a href=&#34;https://lnmp.org/faq/lnmp-vhost-add-howto.html#user.ini&#34;&gt;https://lnmp.org/faq/lnmp-vhost-add-howto.html#user.ini&lt;/a&gt;&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/php/">PHP</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/tech/">Tech</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>记与好友的抬杠时刻</title>
                <link>https://ulovei.net/life/diss-and-friend/</link>
                <guid isPermaLink="true">https://ulovei.net/life/diss-and-friend/</guid>
                <pubDate>Tue, 20 Apr 2021 09:20:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;我的同事一个前端，每次下班回家的路上，因为我俩都在减肥，使用每天都选择走路回家，在路上动不动就会争辩起来，简直每天不互怼那两下心里难受，&lt;/p&gt;
&lt;p&gt;不是在争论技术，就是在争论社会，感情，哲学(偶尔).&lt;/p&gt;
&lt;p&gt;抬杠使我快乐，虽然我不是个喜欢抬杠的人，哈哈&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/life/">Life</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>上帝留下的bug</title>
                <link>https://ulovei.net/life/god-the-bug/</link>
                <guid isPermaLink="true">https://ulovei.net/life/god-the-bug/</guid>
                <pubDate>Fri, 16 Apr 2021 09:20:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;生活像一个程序，每天执行不同的方法，人像程序中的&lt;code&gt;对象&lt;/code&gt;.面向对象编程，跟面向过程编程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;XiaoWang&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Life&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Grilfriend&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$job&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//工作
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$mood&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//心情指数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//年龄 初始值0
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$sex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//性别未知=0  男=1  女=2
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	
	&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
		&lt;span class=&#34;c1&#34;&gt;//睡眠，休息
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	
	&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;eatfoods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
		&lt;span class=&#34;c1&#34;&gt;//吃东西
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;mood&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//吃东西使人愉悦 心情+1
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;mood&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//吃到不喜欢的东西/不好吃的 心情-1
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;//....
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$me&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;XiaoWang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//初始化对象
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$me&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//睡觉
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$me&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;eatfoods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;meal&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//吃饭
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这个对象里有无数的方法，无数的变量，无数的抛出异常，protected(受保护的)，private(私有的)，public(公共的)，&lt;/p&gt;
&lt;p&gt;有些人的生活过得糟糕，而有些人的生活过得充实.&lt;/p&gt;
&lt;p&gt;使用怎样才能让这个程序平稳的运行呢，我发现我找到了bug。😂 ，我这套程序的bug就是&lt;code&gt;洗碗&lt;/code&gt;,&lt;code&gt;洗澡&lt;/code&gt;,&lt;code&gt;运动&lt;/code&gt;... 其他bug还在寻找&lt;/p&gt;
&lt;p&gt;洗碗是个奇妙的过程，能激发很多灵感&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由脏到干净本身就是一个愉悦的过程，没有假话&lt;/li&gt;
&lt;li&gt;手眼脑的配合如钢琴似闲聊都是享受，全是真话&lt;/li&gt;
&lt;li&gt;闲下来空下来大脑在重压中活跃起来，毫无疑问&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运动能让整个人受到启发，运动前是拒绝的，运动后是愉悦的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大汗淋漓后的平静&lt;/li&gt;
&lt;li&gt;身体内啡肽的分泌&lt;/li&gt;
&lt;li&gt;颇有成就感的散发&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生活还是多点歇斯底里，多点生活的味道.&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/life/">Life</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>记录一次桌面整理</title>
                <link>https://ulovei.net/tech/on-desktop-clear-up/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/on-desktop-clear-up/</guid>
                <pubDate>Thu, 15 Apr 2021 09:20:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;在前段时间太追求简洁的工作了，专注模式，全程专注解决问题，隐藏桌面，磁吸任务栏，导致很多时候不方便&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丢掉了desktop，很多临时文件没处放&lt;/li&gt;
&lt;li&gt;磁吸任务栏，很多消息看不到，也不方便，想打开应用习惯了Tab+Alt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在大致优化了一下&lt;/p&gt;
&lt;p&gt;现在的桌面
&lt;img src=&#34;https://ulovei.net/images/1618549260(1).jpg&#34; alt=&#34;现在的桌面.jpg&#34; title=&#34;现在的桌面&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;优化情况如下&#34;&gt;优化情况如下&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;放出桌面&lt;/li&gt;
&lt;li&gt;解除桌面图标排序，整齐的排序给我一种非乱似乱的感觉，使用这种杂乱的排序会让我很舒适&lt;/li&gt;
&lt;li&gt;任务栏常驻 置顶&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;快捷方式呢&#34;&gt;快捷方式呢？&lt;/h3&gt;
&lt;p&gt;一定会有朋友问我快捷方式哪里去了，其实在win8 的时候微软就已经把程序快捷方式放到了启动（start）里，类似Mac的程序坞
来吧展示！
&lt;img src=&#34;https://ulovei.net/images/1618549543(1).jpg&#34; alt=&#34;Win10-Statr.jpg&#34; title=&#34;Win10 Statr&#34;&gt;
基本的软件，都在这儿了，一个win键，直接可以拉取，常用软件可以设置快捷键&lt;/p&gt;
&lt;p&gt;像我的话常用的就是浏览器，360浏览器我的快捷键是ctrl+shift+b 谷歌我用的&lt;code&gt;金丝雀&lt;/code&gt;（candy）版本的 快捷键 ctrl+shift+b&lt;/p&gt;
&lt;p&gt;然后配上边缘点击拉起 程序集 还是很方便的,软件名 &lt;code&gt;CLaunch&lt;/code&gt;,可以去百度下载&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/1618549728.jpg&#34; alt=&#34;CLaunch.jpg&#34; title=&#34;CLaunch&#34;&gt;&lt;/p&gt;
&lt;p&gt;我这个方案，不一定是最好的，but 应该是适合我的&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/tech/">Tech</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Project List</title>
                <link>https://ulovei.net/tech/project-list/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/project-list/</guid>
                <pubDate>Mon, 12 Apr 2021 12:20:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;h3 id=&#34;1多功能抽奖系统&#34;&gt;1.多功能抽奖系统&lt;/h3&gt;
&lt;p&gt;目前打算集成到fastadmin作为插件售卖，价格288&lt;/p&gt;
&lt;h3 id=&#34;2有图小程序&#34;&gt;2.有图小程序&lt;/h3&gt;
&lt;p&gt;可能涉及到侵权，前端已经完成，估计后期会搁置，&lt;/p&gt;
&lt;h3 id=&#34;3开源博客系统&#34;&gt;3.开源博客系统&lt;/h3&gt;
&lt;p&gt;开源的个人博客系统，打造主题插件市场, 目前规划阶段，先搭建框架，再搭建主题商店，插件商店，可能会用Vue.js 作为前端&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/tech/">Tech</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>多巴胺和内啡肽</title>
                <link>https://ulovei.net/life/04-05suibi/</link>
                <guid isPermaLink="true">https://ulovei.net/life/04-05suibi/</guid>
                <pubDate>Mon, 05 Apr 2021 12:20:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;快乐的秘诀。当吃到好的的时候和喜欢的喜欢的人在一起... 身体就会分泌一种叫做多巴胺的物质，使人心情愉悦。
当然多巴胺的获取很简单，人人都喜欢，但多巴胺带来的愉悦是短暂，持续时间不会很久&lt;/p&gt;
&lt;p&gt;而内啡肽也是一种跟多巴胺相似的物质，但是它的获取就比多巴胺困难，但是他的效果是最持久的，比如在慢跑中突破极限，这时身体收到这样的信号会促进内啡肽的分泌。&lt;/p&gt;
&lt;p&gt;当然内啡肽的获取方式有很多比如，在运动中不断的突破，在困境找到出口，爬山爬到山顶欣赏美丽的风景，久别重逢见到心爱的人，期待的事情变成现实，听音乐...&lt;/p&gt;
&lt;p&gt;内啡肽是一种吝啬的物质，它希望你每一次感到快乐都是由内啡肽带来的。&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/life/">Life</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>随笔</title>
                <link>https://ulovei.net/life/04-04suibi/</link>
                <guid isPermaLink="true">https://ulovei.net/life/04-04suibi/</guid>
                <pubDate>Sun, 04 Apr 2021 12:20:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p style=&#34;text-align: center;&#34;&gt; 
你看今天的太阳  多适合  &lt;br/&gt;
不做好人  也不做坏人啊  &lt;br/&gt;
你看今天的风雨  多需要&lt;br/&gt;
不惹事  也不怕事的你啊&lt;br/&gt;
&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/life/">Life</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>天外来物</title>
                <link>https://ulovei.net/life/tianwailaiwu/</link>
                <guid isPermaLink="true">https://ulovei.net/life/tianwailaiwu/</guid>
                <pubDate>Thu, 25 Mar 2021 12:20:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p style=&#34;text-align: center;&#34;&gt; 
天 外 飞 来 物  &lt;br/&gt;
外 天 飞 物 来  &lt;br/&gt;
飞 飞 飞 飞 飞  &lt;br/&gt;
来 物 飞 天 外  &lt;br/&gt;
物 来 飞 外 天  &lt;br/&gt;
&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/life/">Life</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>前端世界的大门</title>
                <link>https://ulovei.net/tech/vue-js-open/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/vue-js-open/</guid>
                <pubDate>Mon, 08 Mar 2021 19:37:02 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;前段时间一直在弄一个小程序，也算是我接触前端MVVM开发模式的处女座吧，深深的被Vue的各种组件，以及他的生命周期跟特性吸引，也没画原型图跟设计图，对着别人的小程序一顿瞄，模块化的组件，平滑的请求接口，不禁感叹自己会的还是不全面。在公司的小伙伴们的帮助下，把前端功能全部做完，但途中遇到的一些问题，导致小程序还是迟迟无法上线
就很苦恼。这次开发中获益颇多，也受到很多启发，有了很多想法，现在的小程序前端已经上架微信端，微信搜索：&lt;strong&gt;You图&lt;/strong&gt; 进入即可，使用期待一下，我接下来的产物吧&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/vue.js/">Vue.js</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/code/">Code</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>新年快乐</title>
                <link>https://ulovei.net/life/happy-new-year-of-2021/</link>
                <guid isPermaLink="true">https://ulovei.net/life/happy-new-year-of-2021/</guid>
                <pubDate>Thu, 11 Feb 2021 19:38:05 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/a65002c8d217408d76c7d7fac6eb5a5e_1e26e089c6bf48c867531b37429ee4d7.jpg&#34; alt=&#34;扭转乾坤.jpg&#34; title=&#34;牛转乾坤&#34;&gt;&lt;/p&gt;
&lt;p&gt;又是新的一年，过去的一年，经历的太多，也成长了很多。新的一年，永远年轻，永远热泪盈眶。小王在这里也祝大家新年快乐，牛气冲天，你爱跟爱你的人都在身边&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/life/">Life</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/2021/">2021</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>HTTPS 和 TLS 证书</title>
                <link>https://ulovei.net/tech/https-tls/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/https-tls/</guid>
                <pubDate>Thu, 04 Feb 2021 09:38:05 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;HTTPS 是 &lt;a href=&#34;https://web.dev/progressive-web-apps/&#34;&gt;PWA&lt;/a&gt; 的基本要求之一，这里我们考察一下 HTTPS 和 TLS 证书及其申请流程。本文偏实用，即 TLS 证书的申请。&lt;/p&gt;
&lt;h2 id=&#34;写在前面&#34;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;TLS 是 SSL 被 IETF 标准化后的名字，最新版本是 &lt;a href=&#34;https://tools.ietf.org/html/rfc8446&#34;&gt;TLS 1.3&lt;/a&gt;。目前绝大部分网站使用的应该都是 TLS，所以目前 CA 签发的证书技术上严格来说应该都是 TLS 证书。&lt;/p&gt;
&lt;h2 id=&#34;httpstls&#34;&gt;HTTPS/TLS&lt;/h2&gt;
&lt;p&gt;HTTP 与 HTTPS 的不同就在于增加的 TLS 传输层安全协议，HTTPS 的解释和 TLS 的原理可以参考以下几篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE&#34;&gt;超文本传输安全协议 | 维基百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/zh-cn/learning/ssl/what-is-https/&#34;&gt;什么是 HTTPS？ | Cloudflare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hadyang.github.io/interview/docs/basic/net/https/&#34;&gt;HTTPS | Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/6844903830916694030&#34;&gt;深入理解 HTTPS 工作原理 | 掘金&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%82%B3%E8%BC%B8%E5%B1%A4%E5%AE%89%E5%85%A8%E6%80%A7%E5%8D%94%E5%AE%9A&#34;&gt;传输层安全性协议 | 维基百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000021559557&#34;&gt;HTTPS 详解二：SSL/TLS 工作原理和详细握手过程 | SegmentFault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/30655259&#34;&gt;HTTPS 精读之 TLS 证书校验 | 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;证书&#34;&gt;证书&lt;/h2&gt;
&lt;p&gt;对于网站，只有使用受浏览器信任的第三方证书签发机构（CA）签发的有效（证书是有期限的）证书才能正常使用，不然浏览器会跳出警告甚至直接阻止用户访问该网站。&lt;/p&gt;
&lt;p&gt;目前，主流浏览器 Chrome/Firefox/Safari 信任的 CA 应该都是国外的，国内相关服务提供商（比如阿里云、腾讯云、华为云）应该都是这些 CA 的代理╱中介。&lt;/p&gt;
&lt;p&gt;TLS 证书的解释和 Let’s Encrypt 证书的申请可以参考以下几篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/zh-cn/learning/ssl/what-is-an-ssl-certificate/&#34;&gt;什么是 SSL 证书？ | Cloudflare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wsgzao.github.io/post/acme/&#34;&gt;使用 acme.sh 免费申请 HTTPS 证书 | HelloDog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://easy.zhetao.com/easy-https-lets-encrypt-content-115&#34;&gt;Let’s Encrypt 证书生成流程 | Easy HTTPs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://imququ.com/post/letsencrypt-certificate.html&#34;&gt;Let’s Encrypt，免费好用的 HTTPS 证书 | Jerry Qu 的小站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.barretlee.com/blog/2016/04/24/detail-about-ca-and-certs/&#34;&gt;细说 CA 和证书 | 小胡子哥的个人网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;证书申请&#34;&gt;证书申请&lt;/h2&gt;
&lt;p&gt;目前证书按验证级别的不同大概分三种类型，DV、OV、EV，参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cloudflare.com/zh-cn/learning/ssl/types-of-ssl-certificates/&#34;&gt;SSL 证书的类型 | Cloudflare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.globalsign.com/en/ssl-information-center/types-of-ssl-certificate&#34;&gt;What Are The Different Types of SSL Certificates? | GlobalSign&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们这里要申请的 DV 级别的证书，CA 在签发的时候只需要验证我们对「域」的控制权╱所有权。&lt;/p&gt;
&lt;p&gt;只有顶级域名或公网 IP 才能获得受主流浏览器默认信任的 CA 签发的证书。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特别提醒&lt;/strong&gt;：申请 CA 签发的 TLS 证书时，验证的不是主机的身份，而是我们对域的控制权。对主机身份的验证，是 TLS 协议的内容，通过非对称加密算法来实现。&lt;/p&gt;
&lt;h3 id=&#34;申请&#34;&gt;申请&lt;/h3&gt;
&lt;p&gt;我们在 &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let’s Encrypt&lt;/a&gt; 这个 CA 申请永久免费的 TLS 证书，通过 ACME 客户端以 Let’s Encrypt 提出的 ACME 协议自动申请证书。..先决条件..是，拥有一个属于自己的域名。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc8555&#34;&gt;ACME&lt;/a&gt; 协议是 Let’s Encrypt 这个组织为了节约运营成本而提出的，用自动化的程序流程解决传统证书申请中存在的人工流程，以及证书的自动更新问题，目前已经是一项 IETF 标准。&lt;/p&gt;
&lt;p&gt;ACME 主要提供两种验证方式，HTTP 方式和 DNS 方式，介绍可以参考 &lt;a href=&#34;https://letsencrypt.org/docs/challenge-types/&#34;&gt;Challenge Types&lt;/a&gt;。由于 HTTP 方式需要有公网可访问的 80 端口，为了本地测试的方便，此处我们采用传统手动 DNS 方式来通过 CA 在签发证书时要求的验证。&lt;/p&gt;
&lt;p&gt;我们此处使用的 ACME 客户端是 &lt;a href=&#34;https://github.com/acmesh-official/acme.sh&#34;&gt;acme.sh&lt;/a&gt;，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 下载脚本&lt;/span&gt;
git clone --depth &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; https://github.com/acmesh-official/acme.sh.git &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; acme.sh

&lt;span class=&#34;c1&#34;&gt;# 申请证书（注意将 example.com 修改为自己要申请证书的域名）&lt;/span&gt;
./acme.sh --issue -d example.com --dns &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --yes-I-know-dns-manual-mode-enough-go-ahead-please
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;网络正常的情况下，稍等片刻，会输出一条 TXT 类型的 DNS 记录，需要我们手动将之增加到域名的 DNS 记录列表。&lt;/p&gt;
&lt;p&gt;添加好后，再稍等一会儿，运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 更新证书（注意将 example.com 修改为自己要申请证书的域名）&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 特别提醒：不要使用自己已上线的域名来实验&lt;/span&gt;
./acme.sh --renew -d example.com --dns &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; --yes-I-know-dns-manual-mode-enough-go-ahead-please
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;稍等片刻，TLS 证书应该就已经申请成功了！导出证书所需要的文件应该就会放在 &lt;code&gt;~/.acme.sh/example.com/&lt;/code&gt;（比如）。&lt;/p&gt;
&lt;h3 id=&#34;检验&#34;&gt;检验&lt;/h3&gt;
&lt;p&gt;我们可以在本地通过浏览器来检验我们的证书，不过首先我们需要在本地运行一个 Web Server，这里以 Nginx 为例，参考 &lt;a href=&#34;https://github.com/acmesh-official/acme.sh#3-install-the-cert-to-apachenginx-etc&#34;&gt;Install the cert to Apache/Nginx&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;首先，在本机上安装好 Nginx，然后我们导出 Nginx 需要的证书文件和私钥：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 导出私钥和证书（注意将 example.com 修改为相应域名，下同）&lt;/span&gt;
./acme.sh --install-cert -d example.com &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--key-file       cert.key &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--fullchain-file cert.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，将证书和私钥..移动..到 &lt;code&gt;/etc/nginx/&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo mv cert.* /etc/nginx/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;并修改 &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;，在底部加入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;k&#34;&gt;http&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# HTTPS server
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kn&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kn&#34;&gt;listen&lt;/span&gt;       &lt;span class=&#34;mi&#34;&gt;443&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;kn&#34;&gt;server_name&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;example.com&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;kn&#34;&gt;ssl_certificate&lt;/span&gt;      &lt;span class=&#34;s&#34;&gt;cert.pem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;kn&#34;&gt;ssl_certificate_key&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;cert.key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;kn&#34;&gt;ssl_session_cache&lt;/span&gt;    &lt;span class=&#34;s&#34;&gt;shared:SSL:1m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;kn&#34;&gt;ssl_session_timeout&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;5m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;kn&#34;&gt;ssl_ciphers&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;HIGH:!aNULL:!MD5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;kn&#34;&gt;ssl_prefer_server_ciphers&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;kn&#34;&gt;location&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;kn&#34;&gt;root&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;/usr/share/nginx/html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;kn&#34;&gt;index&lt;/span&gt;  &lt;span class=&#34;s&#34;&gt;index.html&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;index.htm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，往 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件追加一行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;127.0.0.1  example.com&amp;#39;&lt;/span&gt; &amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后 &lt;code&gt;sudo systemctl restart nginx&lt;/code&gt; 并在浏览器打开 &lt;a href=&#34;https://example.com&#34;&gt;https://example.com&lt;/a&gt; 就可以成功测试！&lt;/p&gt;
&lt;h2 id=&#34;其它&#34;&gt;其它&lt;/h2&gt;
&lt;p&gt;以上仅仅测试了证书的简单申请和检验，生产环境下证书的申请和部署，HTTPS 的启用，证书的自动更新和自动部署，均未涉及。&lt;/p&gt;
&lt;p&gt;几个链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/20803288&#34;&gt;SSL 证书为什么有期限？ | 知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://letsencrypt.org/zh-cn/docs/certificates-for-localhost/&#34;&gt;localhost 证书 | Let’s Encrypt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crt.sh&#34;&gt;https://crt.sh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/devops/">devops</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/pwa/">pwa</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>专注模式</title>
                <link>https://ulovei.net/tech/focus-mode/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/focus-mode/</guid>
                <pubDate>Tue, 02 Feb 2021 19:37:02 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;My desktop&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/1612270943(1).jpg&#34; alt=&#34;桌面.jpg&#34;&gt;&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/php/">PHP</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/share/">Share</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>大爱MIUI</title>
                <link>https://ulovei.net/tech/miui-niubi/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/miui-niubi/</guid>
                <pubDate>Tue, 02 Feb 2021 19:37:02 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;我之前是个花粉，用过华为的Mate系列跟P系列还有Nova系列，直到华为关闭了BootLoader ，无奈止步于华为Mate20Pro，机器跟UI都很不错，EMUI，简洁实用，更新EMUI11 发现广告异常的多，各种APP的消息推送，自带APP的启动广告，实在无奈走到了隔壁的米粉的阵营&lt;/p&gt;
&lt;h2 id=&#34;两者优缺点&#34;&gt;两者优缺点&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;EMUI&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先是简洁的操作，充满了商务风，后期在EMUI11 后开始逐渐走向花里花哨&lt;/li&gt;
&lt;li&gt;底层优化，华为的底层优化我个人感觉非常到胃，以至于，想玩机各种插件都闪退，日常使用体验感很棒&lt;/li&gt;
&lt;li&gt;适配华为生态，可以跟华为笔记本电脑互联，家居互联，智能耳机，这点 很不错 ，但是目前用不到&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;MIUI&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在MIUI12系统的发布会上 ，小米的隐私功能真的是璀璨夺目，大赞，后期MIUI12.5 功能更加完善&lt;/li&gt;
&lt;li&gt;界面UI，有系统适配的图标，会眨眼睛的QQ 会转的设置齿轮，个人感觉细节到位&lt;/li&gt;
&lt;li&gt;空白通信证，能给那些读取手机设备信息的 app 抛出空白通行证&lt;/li&gt;
&lt;li&gt;模糊定位 ，在APP 获取定位的时候，可以选择模糊定位跟精确定位&lt;/li&gt;
&lt;li&gt;动画打断 有IOS内味了&lt;/li&gt;
&lt;/ol&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/miui/">MIUI</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/ideas/">ideas</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>while(1) 与什么是哲学？</title>
                <link>https://ulovei.net/tech/what-is-philosophy/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/what-is-philosophy/</guid>
                <pubDate>Tue, 02 Feb 2021 01:37:02 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;h2 id=&#34;workflow&#34;&gt;workflow&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ vim philosophy.c
$ &lt;span class=&#34;c1&#34;&gt;# input the code&lt;/span&gt;
$ gcc philosophy.c -o philosophy &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./philosophy &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -n &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;en&#34;&gt;en&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;What is &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;philosophy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;philosophy of &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// assume 42 is infinite ∞
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s%s%s%s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;strcat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// a logical bug it is
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;What is philosophy?&lt;br&gt;
What is philosophy of philosophy?&lt;br&gt;
What is philosophy of philosophy of philosophy?&lt;br&gt;
What is philosophy of philosophy of philosophy of philosophy?&lt;br&gt;
...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;zh&#34;&gt;zh&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;什么是&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;哲学&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;的哲学&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;？&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// assume 42 is infinite ∞
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s%s%s%s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;question&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;strcat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iteration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;什么是哲学？&lt;br&gt;
什么是哲学的哲学？&lt;br&gt;
什么是哲学的哲学的哲学？&lt;br&gt;
什么是哲学的哲学的哲学的哲学？&lt;br&gt;
……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;idea&#34;&gt;idea&lt;/h2&gt;
&lt;p&gt;Philosophy is not an infinite loop inside, philosophy is a finite code outside.&lt;/p&gt;
&lt;p&gt;哲学不是里面的无限循环，哲学是外面的有限代码。&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://ulovei.net/tech/what-is-philosophy/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;本文转自一休儿-&lt;a href=&#34;https://io-oi.me/tech/what-is-philosophy/&#34;&gt;while(1) 与什么是哲学？&lt;/a&gt; &lt;a href=&#34;https://ulovei.net/tech/what-is-philosophy/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/philosophy/">philosophy</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/ideas/">ideas</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>原版Windows10免封装跳过oobe定制专属系统</title>
                <link>https://ulovei.net/tech/win10-skip-oobe/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/win10-skip-oobe/</guid>
                <pubDate>Mon, 01 Feb 2021 10:54:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://ulovei.net/tech/win10-skip-oobe/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;封装系统是一个很麻烦的事，但是原版系统安装更麻烦，懒人有懒招，分享一个不用封装就可以跳过OOBE设置账户等信息的步骤，部署完重启直接进入系统，其实就是个应答文件，保持了原版系统的原汁原味，不做任何更改，如果有需要修改前可以用DISM++等工具进行适当的优化再修改，比如开启NET3.5，集成最新补丁，去掉快捷方式箭头，桌面显示此电脑，去除自带APP等等，论坛里教程多得是，我就不多说了，这个要看个人需求了.大神请无视。所有步骤都可以在PE下完成&lt;/p&gt;
&lt;p&gt;PE使用天空的优启通。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先用&lt;strong&gt;Easy Image X&lt;/strong&gt;展开&lt;strong&gt;Windows10&lt;/strong&gt;映像到C盘，不要重启&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;C:/Windows&lt;/code&gt;下新建panther文件夹
&lt;img src=&#34;https://ulovei.net/images/55e3c20a6eb0142022302690c0e4728d_150507f326288xvsv74o23.jpg&#34; alt=&#34;在C:/Windows下新建panther文件夹&#34;&gt;&lt;/li&gt;
&lt;li&gt;然后在&lt;code&gt;C:\Window\panther&lt;/code&gt;文件夹下新建文本把下面代码复制进去重命名为&lt;code&gt;Unattend.xml&lt;/code&gt;注意后缀名
这样就可以跳过&lt;code&gt;oobe&lt;/code&gt;了，亲测&lt;code&gt;Windows10_1809&lt;/code&gt;专业版和家庭版有效，部署后直接进入系统，免去了复杂的账户设置等步骤.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;unattend&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:schemas-microsoft-com:unattend&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;settings&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;pass=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;windowsPE&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Microsoft-Windows-International-Core-WinPE&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;amd64&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;31bf3856ad364e35&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;language=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;neutral&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;versionScope=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;nonSxS&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://schemas.microsoft.com/WMIConfig/2002/State&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;SetupUILanguage&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;UILanguage&amp;gt;&lt;/span&gt;zh-CN&lt;span class=&#34;nt&#34;&gt;&amp;lt;/UILanguage&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SetupUILanguage&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;InputLocale&amp;gt;&lt;/span&gt;zh-CN&lt;span class=&#34;nt&#34;&gt;&amp;lt;/InputLocale&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;SystemLocale&amp;gt;&lt;/span&gt;zh-CN&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SystemLocale&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;UILanguage&amp;gt;&lt;/span&gt;zh-CN&lt;span class=&#34;nt&#34;&gt;&amp;lt;/UILanguage&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;UserLocale&amp;gt;&lt;/span&gt;zh-CN&lt;span class=&#34;nt&#34;&gt;&amp;lt;/UserLocale&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Microsoft-Windows-Setup&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;amd64&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;31bf3856ad364e35&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;language=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;neutral&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;versionScope=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;nonSxS&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://schemas.microsoft.com/WMIConfig/2002/State&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;ImageInstall&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;OSImage&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;InstallToAvailablePartition&amp;gt;&lt;/span&gt;false&lt;span class=&#34;nt&#34;&gt;&amp;lt;/InstallToAvailablePartition&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;WillShowUI&amp;gt;&lt;/span&gt;OnError&lt;span class=&#34;nt&#34;&gt;&amp;lt;/WillShowUI&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/OSImage&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ImageInstall&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;UserData&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;ProductKey&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;Key&amp;gt;&lt;/span&gt;*****-*****-*****-*****-*****&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Key&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;WillShowUI&amp;gt;&lt;/span&gt;OnError&lt;span class=&#34;nt&#34;&gt;&amp;lt;/WillShowUI&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ProductKey&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;AcceptEula&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/AcceptEula&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;FullName&amp;gt;&lt;/span&gt;Windows8&lt;span class=&#34;nt&#34;&gt;&amp;lt;/FullName&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;Organization&amp;gt;&lt;/span&gt;WORKGROUP&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Organization&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/UserData&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;settings&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;pass=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;oobeSystem&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Microsoft-Windows-Shell-Setup&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;amd64&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;31bf3856ad364e35&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;language=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;neutral&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;versionScope=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;nonSxS&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://schemas.microsoft.com/WMIConfig/2002/State&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;OOBE&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;SkipMachineOOBE&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SkipMachineOOBE&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;SkipUserOOBE&amp;gt;&lt;/span&gt;false&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SkipUserOOBE&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/OOBE&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;AutoLogon&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;Username&amp;gt;&lt;/span&gt;Administrator&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Username&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;Enabled&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Enabled&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;LogonCount&amp;gt;&lt;/span&gt;1&lt;span class=&#34;nt&#34;&gt;&amp;lt;/LogonCount&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/AutoLogon&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;LogonCommands&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;AsynchronousCommand&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;wcm:action=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;add&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;CommandLine&amp;gt;&lt;/span&gt;%WINDIR%\1.cmd&lt;span class=&#34;nt&#34;&gt;&amp;lt;/CommandLine&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;Active&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;Order&amp;gt;&lt;/span&gt;1&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Order&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/AsynchronousCommand&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/LogonCommands&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;settings&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;pass=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;specialize&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Microsoft-Windows-Shell-Setup&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;amd64&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;31bf3856ad364e35&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;language=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;neutral&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;versionScope=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;nonSxS&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://schemas.microsoft.com/WMIConfig/2002/State&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;ComputerName&amp;gt;&lt;/span&gt;*&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ComputerName&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;TimeZone&amp;gt;&lt;/span&gt;China Standard Time&lt;span class=&#34;nt&#34;&gt;&amp;lt;/TimeZone&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;component&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Microsoft-Windows-Security-SPP-UX&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;processorArchitecture=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;amd64&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;publicKeyToken=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;31bf3856ad364e35&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;language=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;neutral&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;versionScope=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;nonSxS&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:wcm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://schemas.microsoft.com/WMIConfig/2002/State&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;SkipAutoActivation&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SkipAutoActivation&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;cpi:offlineImage&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cpi:source=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;wim:f:/install.wim#Windows 8 Pro&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:cpi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:schemas-microsoft-com:cpi&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/unattend&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/3bb33acfb84b865dbba557b55cd5dea3_150509ztnzjxnnhmpji1mx.jpg&#34; alt=&#34;优化程序&#34;&gt;&lt;/p&gt;
&lt;p&gt;至于批处理需要运行什么就要看你自己的需要了，我是用了几个批处理更改了壁纸，调整睡眠方案，安装了输入法和压缩软件，更改了计算机OEM信息，你也可以安装运行库，支持静默安装的软件都可以的，发挥你的想象力吧&lt;/p&gt;
&lt;p&gt;更改完毕记得保存映像放到U盘，配合天空优启通Easy Image X恢复映像时勾选万能驱动，这样部署时就可以自动安装驱动了，完美！&lt;/p&gt;
&lt;p&gt;只是分享一下自己的方法，如果你有更好的方法就更好了，觉得好就试一下，不好请勿喷，谢谢&lt;/p&gt;
&lt;hr&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;文章转自&lt;a href=&#34;https://www.itsk.com/thread-395603-1-1.html&#34;&gt;it天空-金正电脑&lt;/a&gt; &lt;a href=&#34;https://ulovei.net/tech/win10-skip-oobe/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/share/">Share</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/windows/">Windows</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>小雏菊</title>
                <link>https://ulovei.net/life/little-daisy/</link>
                <guid isPermaLink="true">https://ulovei.net/life/little-daisy/</guid>
                <pubDate>Mon, 01 Feb 2021 10:54:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;&lt;video autoplay=&#34;autoplay&#34; src=&#34;https://ulovei.net/video/9771e302c8914f178840c4496fa6c03b.mp4&#34; poster=&#34;/images/1612163708(1).jpg&#34;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;前些天买了几束小雏菊，发现它比玫瑰、康乃馨…几乎所有的鲜花，都更好养活。其他的花几天就凋零了，无论你怎样耗费心血的去呵护它。扔掉的时候，总让人觉得也是生命的逝去，同样不舍。&lt;/p&gt;
&lt;p&gt;可小雏菊只需要给一点水，甚至于不必给阳光，它任然会绽放美丽，整个花期长达近两个月。我给它剪根，有时甚至会剪到很短很短，随意放在小杯子里，它依然能盛开如初。直到将尽的时候，都可以做成干花长久的保存。&lt;/p&gt;
&lt;p&gt;人有相聚就会有离别，花有开放就会有凋谢，可唯独小雏菊它不会。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/ED763E9D3EDDE7AD0F64D0FE4E195CDB.jpg&#34; alt=&#34;from-Taiwan-小姐姐&#34; title=&#34;from Taiwan 小姐姐&#34;&gt;&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/life/">Life</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/friend/">friend</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>前拼多多员工发布《我在拼多多的三年》</title>
                <link>https://ulovei.net/life/pinduoduo-release-in-the-three-year/</link>
                <guid isPermaLink="true">https://ulovei.net/life/pinduoduo-release-in-the-three-year/</guid>
                <pubDate>Sat, 30 Jan 2021 10:54:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;2021-01-12，一位毕业于浙大，前拼多多的信息安全工程师在浙江大学cc98论坛和个人博客发表了《我在拼多多的三年》。&lt;/p&gt;
&lt;p&gt;作者原描述：「本文目的是【希望学弟学妹们千万不要去拼多多】，从一个底层员工的视角，记录一下拼多多这家公司三年以来的 整体变化，本文不涉及技术机密，只讨论行政制度、文化氛围、办公体验等，记录个人主观意愿，离职后于家中编 写，记录一下经历，存在主观印象，部分内容已做马赛克处理。 」 各行各业的大家看完有何感想 ？&lt;/p&gt;
&lt;p&gt;LeadroyaL&#39;s website
Android Player &amp;amp; Pwn Baby&lt;/p&gt;
&lt;h1 id=&#34;background&#34;&gt;background&lt;/h1&gt;
&lt;p&gt;首发于浙江大学cc98论坛和个人博客，如果转载请联系cc98官方或者联系本人，字数1w+，阅读时间约为10分钟。&lt;/p&gt;
&lt;p&gt;本文目的是【希望学弟学妹们千万不要去拼多多】，从一个底层员工的视角，记录一下拼多多这家公司三年以来的整体变化，本文不涉及技术机密，只讨论行政制度、文化氛围、办公体验等，记录个人主观意愿，离职后于家中编写，记录一下经历，存在主观印象，部分内容已做马赛克处理。&lt;/p&gt;
&lt;p&gt;表明身份1，没必要匿名了，根据拼多多的能力，稍微匹配一下时间段，想找到谁发帖非常容易。
表明身份2，楼主2013年入学2017年毕业，曾在cc98非常活跃，毕业后渐渐远离。2018年6月18日社招入职拼多多，工作2.5年，特地R回来cc98讲讲关于拼多多这三年的变化，总结一下，就是越来越差，希望学弟学妹们千万不要去。另外本人已离职，未收到离职证明和全年的加班费，HR承诺4-7天内寄出，本周三是第八天，如果还没有收到离职证明或者快递单号的话，楼主会来更新《如何不体面地从拼多多离职》，离职比日常更刺激哦。
插曲，编写本文的过程中，1月11日，某拼多多员工在校友群劝退学弟学妹，已经被开除了，还好我已经离职了，不能给公司开除我的机会。
声明立场，楼主对拼多多不满已经很久很久了，并不是墙倒众人推才来发帖，楼主在2020年12月9日递交了辞职通知，本来想着安安静静满30天走人，写个总结。结果从2021年1月1日到现在，该公司一直整活，导致我都没空来写文了，今天能发出来也是加班加点。
拼多多，2018环境正常，2019环境变差，2020环境很差，2021已黑化，已离职；想直接看重点的从2019开始看。&lt;/p&gt;
&lt;h1 id=&#34;2018&#34;&gt;2018&lt;/h1&gt;
&lt;p&gt;总体来说，2018年的拼多多还是挺好的，我待的挺开心。&lt;/p&gt;
&lt;h3 id=&#34;入职&#34;&gt;入职&lt;/h3&gt;
&lt;p&gt;入职前，轩辕（花名，常用名 flanker）：”我去了一个创业公司，缺人，岗位很适合你，你要不要来，创立者是一些上交和浙大的。”。调查了一下，学弟A也去了，每周上六天班，严格打卡，也不是不能接受吧，在被蚂蚁金服的offer放鸽子之后，就去了pdd。
2018.6.18 入职，当时技术安全组里只有*个人，看到了主管轩辕（现已离职，有大瓜：拼多多安全主管），相识多年学弟B（实习结束后离职），久仰大名的学长C，一面之缘的D，出现在业内新闻中的学姐E（现已离职），打听了一下还有SRC排行第一的大佬F，以及其他几位优秀的同事。看来我成了全场唯一指定最菜的人，来这里还有很多东西要学，后来发现自己很carry，不菜。
入职当天的感受：当时办公设施确实挺简陋的，工位很挤，没有员工食堂，吃饭需要使用”美餐”APP进行点餐，按照自己的编号去货架拿，之后带到座位上吃。 基本是饿了就可以吃的，11:30-12:00之间随缘去取餐，虽然取餐室非常小，但还不拥挤，体验普通，但比 zju 的饭还是好一些的。（这里埋下伏笔1，2019 年制度更新）
办公室当时是没有座位号的，需要找人时候，只能大概描述自己的位置，非常难受；数月后，行政使用”五大洲”和座位编号，解决了这个棘手的问题，非常好。
最开始住的”员工宿舍”，说是员工宿舍，其实条件挺一般的。1990年的房子，两室零厅，客厅是一个长条，每个卧室里两张床（我旁边的床位暂空），没有别的设备了。另外两个室友人挺好的，一位室友办理了宽带，还和我一起联机打游戏，虽然下班晚，但挺乐观的，另一位室友在七天后，从拼多多离职，入职了上海的字节跳动。这个屋子可能是我毕业后见过最破的住处了，临街很吵，停留在姑且能住的水平。对短期的实习生来说，还是比较方便的，不适合长期居住。
15 天后，我和组里的入职不久的G（现已离职）合租，住在办公室对面的、1990年建造的老破小里面，一人一个卧室，在办公室可以看到房间窗户那种，上班 3 分钟。当然这个地方也挺破的，好在室友G很会过日子，指导我活着一起买了遮光窗帘、电热毯、水泵、灯泡，姑且能活下去洗个热水澡，唯一的优点就是离公司近，非常近，拼多多周日需要上班，周六没事干，就去办公室坐着，能使用”美餐”点饭（伏笔2），有网络可以自由使用（伏笔3），和实习生H一起在办公室渡过周六的无聊时光。&lt;/p&gt;
&lt;h3 id=&#34;逐渐熟悉&#34;&gt;逐渐熟悉&lt;/h3&gt;
&lt;p&gt;慢慢组里的人多了起来，项目也多了起来，其乐融融。由于人少项目多，我从零开始，在 2018 年先后创立和负责了 A、B、C、D、E 等多个项目，并且多次参与公司的安全应急响应，有些工作做得很好，获得优秀绩效，也因为和其他组的开发同事由于意见不合吵架，获得了一次差评的绩效。虽然和2020年一样，每周上六天班，但2018时真的觉得拼多多挺好的，能做很多实事，在安全组，保卫拼多多的服务器、用户安全、商家安全、防止黑客入侵，切实看到成果，这些事情让我很自豪。
在那时候我在大厅里看到98水友 @xxx 也入职拼多多了，感觉多了一个朋友挺开心的，于是这里就不得不说一下管培生的经历了。水友xxx当时是市场管培生，而我是一个技术，公司对二者的职业安排是完全不一样的。某日，我21-22点下班了，听说水友xxx还在办公到23点，我就惊了，原来校招应届生来了的前半年是当客服的，商家客服23点下班，而且有效率评估和 KPI，有严格的汇报制度，工作内容容易让人精神崩溃，我已经察觉到这个人有些不对劲了，我把我键盘借给她了，减缓痛苦程度。反正我下班也没事干，出于人道主义，有时就送她半夜回去，然后再自己走回去。
由于在拼多多伙食较好（后来发现是每天吃官方外卖过于油腻），从 110 吃到了 130 斤，于是开始思考减肥，和周围5个同事把头像改成了”不瘦十斤不改头像”，在那时候晚上下班有时间去跑步，有几天是23点之后跑步，现在觉得还好自己没死；后来天气冷了就在室内锻炼，差不多减到了110-120之间。
除了上六天班之外，好像也没什么想吐槽的，单身时候周末真是闲的蛋疼的。&lt;/p&gt;
&lt;h3 id=&#34;1111值班&#34;&gt;11.11值班&lt;/h3&gt;
&lt;p&gt;半年后，双十一来了，第一次经历这个规模的事件，要求技术人员分为三波人，分别值守11.10晚上、11.11早上、11.11晚上，安全组总共也没几个人；由于我住得近，主动给住得远的同学承担了当天晚上。当时还是很兴奋的，一方面自己想要买东西，一方面也想看看到底有没有黑客在双十一时候搞入侵，虽然凌晨才离开，但挺满足的。
双十一时候，好像连续上了十天班，然后获得两天的休息时间，在这时候，学姐E带我去杭州见闺蜜学妹，后来她的闺蜜成了我的女朋友，在爱情的鼓励下，余下的这几个月，我一直过的很开心，一周上六天班，空闲那天去做高铁去杭州约会，早上走晚上回，一点也感觉不到累。&lt;/p&gt;
&lt;h3 id=&#34;全员大会和年会&#34;&gt;全员大会和年会&lt;/h3&gt;
&lt;p&gt;拼多多上市后，听说有商家在楼下拉横幅也没有看到，也有挺多负面言论，但我本身是一个工程师，和我没什么关系。在上市静默期结束后，公司举行了全员大会，展望未来并且鼓励大家。目前我仅记得一句话：黄峥：”有同事的提问，我们什么时候可以双休呢？”（欢呼）”等我们成为中国第二，就可以双休了”（欢呼）。
2021年了，情况好转了吗？没有。。。
再之后便是年会了，节目中规中矩，吃的挺不错，我做出较多贡献，获得了年度优秀员工，这个 title 的人挺多的，应该是每个组拥有几个名额。听到几个熟悉的名字，感觉评价实至名归。&lt;/p&gt;
&lt;h3 id=&#34;不愉快的小插曲&#34;&gt;不愉快的小插曲&lt;/h3&gt;
&lt;p&gt;细节我实在是不记得了，可能时间点穿插在上文中。
办公软件是企业QQ，有一个 xxxx 人的大群，名为上海员工群，99%的人都在群里，日常闲聊和吐槽。某日，有银行的人来办理香港银行卡，他们创建并且拉了一个微信群，同事之间相互推荐，可能有100个同事，我也在群里。突然，有HR在微信群里混进来了，请本群立刻解散，于是我被移除群聊。第二天，办公室大群宣布解散，官方给出的解散原因为：”为防止个人信息泄露，解散办公室的企业QQ群”。后来这种事情就很频繁了，包括解散了单身员工交友群（本来也没什么人说话），球类运动群，等。
这件事我至今都一头雾水，不知道内部办公软件是怎样泄露个人信息的，群里都是员工是如何相互泄露信息的，公司只是随便找个借口解散大群罢了，关上员工的嘴而已。&lt;/p&gt;
&lt;h1 id=&#34;2019&#34;&gt;2019&lt;/h1&gt;
&lt;p&gt;一切，在那件事之后就变了。。。。。&lt;/p&gt;
&lt;h3 id=&#34;100元优惠券事件引发的全员724值班&#34;&gt;100元优惠券事件引发的全员7*24值班&lt;/h3&gt;
&lt;p&gt;2019.1.10 那是个周末，醒来时候女朋友和我说，”你们公司出事了，可以一百元优惠券随便领”。”扯什么呢，骗人的”。”哦，我没领到”。于是我去上班了，到了办公室，女朋友没有唬我，是真的，出大事了，后面也陆陆续续有各种各样的报道，这件事只是个导火索而已。
这是一个非常大的问题，风控、大盘都有责任，本以为会让每个系统都接风控、全盘核查 API、重构代码等，从技术角度来解决类似问题，但拼多多的操作实在让我惊呆了。
过年后，风控组开始7&lt;em&gt;24小时值班，每个技术岗必须值班，早班7-19点，晚班19-7点。虽然说不怎么合理，但也算是个临时的办法吧。
数日后，技术全员开始7&lt;/em&gt;24小时值班，多强调几遍，技术全员！技术全员！技术全员！
当晚，我印象非常深刻，主管召集组里 xx 个人，在会议室，气氛沉重，”告诉大家一个坏消息，我们也要全员值班了，具体规则我原文念一下xxxxxx”。所有人非常不情愿，大致规则是：每天两个班次，每个组派出1个人，校招生半年内不值班，女生不值晚班，社招x月内不值班，晚班有额外0.5天加班费，早班可以早下班。由于我们组满足条件的人太太太太少，因此只安排晚班，不安排早班。
从个人角度评价一下这个制度。首先，我是没有线上业务的，有线上业务的人也就那么几个，总不能让人家每天24h在线吧；然后，我没有任何权限去处理其他人的业务；再次，别人的业务挂了，我也不知道如何恢复它；最后我得到结论，我的责任就是看报障信息，谁的服务挂了就把他打电话叫醒来。
晚班是19点到7点，按照官方解释，需要在办公室通宵，允许不干活儿，允许玩手机，允许放下手头任务专心收报警邮件，但由于体谅员工，允许员工凌晨1点下班打卡，会房间里继续值班。结合我多次值班的经历，中间就是祈祷千万千万别出锅，让我睡个安稳觉。
分享一下第一次值班时候的回忆：19:00 签到，继续搬砖，继续搬砖，没人了，玩手机，01:00了，下班打卡，在床上玩手机，玩手机，玩手机；03:00睡觉，偶尔醒来看一下消息；07:00起床，签退。
基本是一晚上没睡觉，换来0.5倍工资，整个过程非常枯燥无聊，纯属就是在折腾人；在看破这个本质后，出于对健康的考虑，一方面把值班交给需要的人（比如夜猫子，非贬义），一方面真给不出去，就划划水渡过，基本都是平安夜。
最开始我还存有侥幸心理，认为这个值班持续几个月发现没有效果，就可以结束了。现在 2021 年了，我的视角里值班制度至今没有任何效果，这个制度甚至成为了默认的制度，但我无法找到明文的制度规定，最早的保护体系也不存在了，女生也值晚班，刚入职的社招也值晚班，这里我狠狠踩一脚，做决策的人就是没脑子。&lt;/p&gt;
&lt;h3 id=&#34;搬工位与人满为患&#34;&gt;搬工位与人满为患&lt;/h3&gt;
&lt;p&gt;由于招的人越来越多，原先的工位不够用了就必须整个组都搬走，从入职到离职，我已经搬了大约8次工位了。三个月一小搬，六个月一大搬，最开始确实是因为人数问题，后来发现这个是拼多多的传统，就是折腾人而已，频繁的搬工位只能说明行政水平差，不会提前规划。
然后就会遇到厕所问题，例如知名的”屎”厂新闻，所有人都在骂的事情，我就不展开说了，这么多年了没有任何改进。&lt;/p&gt;
&lt;h3 id=&#34;消除伏笔&#34;&gt;消除伏笔&lt;/h3&gt;
&lt;p&gt;上文提到 2018 年一些较好的制度，在 2019 年都不复存在，公司在更强烈地约束员工。
伏笔1：宽松的吃饭时间被取消，像喂猪一样卡点进食
2019 年的某日，可能是因为侦测到部分员工21:30去吃夜宵，突然来了一条规定，说禁止12/18/22点之前到取餐室。
原先的制度：9-10点早饭，12点午饭，18点晚饭，（可以早点去拿，早点吃完早点干活儿）。周二周四22:00夜宵。
优化后的制度：时间点不变，禁止提前去吃饭。
我个人作息是9:30到办公室，吃早饭，午饭不饿，点一份水果下午吃并且减肥（埋下伏笔4），17:00开始饿，差不多就去吃晚饭，由于取餐是随机的，取餐室虽然小但是不拥挤。
这个新政策一来，11:59:59，门口排队一条龙，工作人员掐着表，不让你进去，一到点，所有人都哗啦啦跑去排队，开始进食！如果去晚了，没个5分钟排队是领不到饭的。其实呢，送餐的11:30就差不多送完了，饭都凉了，就是卡着不让你吃，你气不气，你气不气？？？
监管不严时，这个制度会放松，例如11:59:30就可以进去了，但经常会收紧，举个例子。例1：有专员看着，说没到呢，不能拿，主管批评。例2：供应商说，不能提早给你，提早给你要扣我们钱的。前者是公司的走狗，后者只是公司克扣人家钱罢了。
我愿称这个政策为喂猪政策，据我所知，只有喂猪才卡这么严格的时间，早一秒都不行。
伏笔2：美餐的水果被移除，美餐的甜点被移除。
原先的制度：点餐供应商丰富，午餐、晚餐可以点水果，晚餐可以点甜点。
某日，由于有些员工住得近，周六中午点一份水果，到办公室带走，回家吃。对此，我提出批评，这个员工做的不对。
有意思的来了，由于周六中午有不本分的员工来白嫖水果，公司决定取消每天的水果供应。我这个减肥的人表示非常苦恼，9:30吃早饭，午饭完全吃不下，只能象征性地点一份主食，对此我只想骂人。
伏笔3：从某天起，办公网禁止访问某些网站。
其实我是支持这个制度的，办公时间禁止刷视频，防止员工划水，也算正常。但坑爹的在于，这个网络屏蔽范围很迷，存在不合理的范围，举例：微软更新，微软商店，IntellijIdea官网，手机应用商店，华为login（无法理解），苹果更新推送（后解除），AppleStore（后解除）。一开始和管理员说一下就可以把误封的网站加白，后来不行了，要走流程，让主管审批，我就直接连热点了进行测试了（伏笔5)。
再讲个笑话，某日大老板的某个APP无法访问，于是大赦天下，把该网站加白了；但我访问某些编程站点，确实是正规正当的请求，被拦截了，向IT提出意见，但是IT说不行，可能因为我不是大老板，是是是，他们说啥就是啥吧。&lt;/p&gt;
&lt;h3 id=&#34;公司的消息流通&#34;&gt;公司的消息流通&lt;/h3&gt;
&lt;p&gt;例如上文的三个伏笔，都是没有官方通知的，由高层转给主管，主管在群里，粘贴一下高层的意见，员工才能知道。如果这个公告容易引起舆论，公司会选择口口相传，最后让员工慢慢知道。
官方一般只通知两件事，一是有员工被开除，二是下一个假期克扣几天假期。
讲个笑话，公司内部发生的事情内部是没有任何公告的，员工获取公告的渠道是相互打听，去脉脉社区里闲逛，非常讽刺，称之为出口转内销。
上文提到解散了QQ大群和部分民间微信群，终于有一天，公司变本加厉，大约是2019年6月，有用hr的微信群统统被解散，部门微信群也被责令解散，慢慢民间的微信群就消失殆尽，只有非常熟悉的几个人为了说话方便才会有微信群，一旦被hr发现，就会勒令解散，毫无人权。
堵上员工的嘴，捂住员工的耳朵，一心搬砖领工资，这就是本分的奥义吧。
顺带再提一下，由于长期缺乏文档和搜索功能，做什么事情基本都是靠问，技术方面举例：公司的xxx如何配置，xxx无法打日志怎么办；非技术方面举例，员工手册是什么，7*24值班的规章在哪，本分指的是什么，本分是口袋罪吗。&lt;/p&gt;
&lt;h3 id=&#34;经典事件1查监控确认考勤&#34;&gt;经典事件1：查监控确认考勤&lt;/h3&gt;
&lt;p&gt;拼多多上班和下班都是需要打卡的，分别是11点前20点后。举例，我10点到公司开始办公，我可以使用开机记录、浏览器记录、git记录、聊天记录等来证明自己确实来过，主管承认即可。
某日，据传有员工替旁边员工开机的行为，高层大怒，决定以后补卡都需要HR查监控来执行，不再认可一切证明。
当时我还是挺心疼HR的，屁大点事情都要他们来调监控。一年后，逐渐出现奇葩操作，补卡需要提供一份候选人的简历，补卡和主管绩效挂钩，主管开始强调大家上班一定要打卡。
公司是非常不信任员工的，一切都会朝着坏的方向去思考。&lt;/p&gt;
&lt;h3 id=&#34;经典事件2周六值班旷班被集体开除&#34;&gt;经典事件2：周六值班旷班被集体开除&lt;/h3&gt;
&lt;p&gt;某个周六，一些不本分的员工值白班，7-19点，午饭期间溜出去，过了几个小时还没回来。几天后，查出后全部全员公告并且开除。
员工确实做错了，但罪不至死，因为之前被开除的只有一类人，收受贿赂的运营，这是第一次技术公开被开除的事件。&lt;/p&gt;
&lt;h3 id=&#34;经典事件3查员工手机并开除一位在脉脉发帖质疑空气质量的学弟&#34;&gt;经典事件3：查员工手机，并开除一位在脉脉发帖质疑空气质量的学弟&lt;/h3&gt;
&lt;h3 id=&#34;经典事件4变本加厉的值班&#34;&gt;经典事件4：变本加厉的值班&lt;/h3&gt;
&lt;p&gt;拼多多有四次大促，分别在 618、1010、1111、1212，本以为和 18 年的一样，但我还是太天真了。
这次要求，技术全员值班，所有人都需要值班到凌晨一点，第二天早班的人除外。
对了，这个值班是公益的、无偿的，连续两个晚上凌晨下班，通俗来讲，就是白嫖。由于我做底层支持，没有线上业务，无论呆到几点都没有任何帮助，不少人也是设个现象，但没有办法，命令就得执行。凌晨一点，电梯挤得就跟爆炸一样，xxxx 人，6 部电梯，等真正到楼下，已经凌晨1:30了。
哦对了，如果大促在周一，公司会要求周末两天也要上班，也就是最多可以连上 13 天班，即 日一二三四五六日一二三四五，期间还要全员两天凌晨下班，这谁顶得住啊。
我对公司的这种安排非常不屑，引以为耻。&lt;/p&gt;
&lt;h3 id=&#34;经典事件5公司wiki移除搜索最近访问等功能&#34;&gt;经典事件5：公司wiki移除搜索、最近访问等功能&lt;/h3&gt;
&lt;p&gt;wiki是用来存放笔记和share工作内容的一个地方，为了防止信息泄露，官方移除了相关功能。代价就是，切断各个部门、各个业务之间的连接，自己哪天编辑过的文档也不知道放哪了，公司的组件出现问题不知道去哪搜，不知道去找谁，开发全靠问。对新入职的人来说，无疑是巨大的考验，但管理者并不 care 技术的死活，这种事也不是一天两天了。&lt;/p&gt;
&lt;h3 id=&#34;经典事件6公司禁止从事副业&#34;&gt;经典事件6：公司禁止从事副业&lt;/h3&gt;
&lt;p&gt;某日，公司宣布禁止从事副业，需要诚实报备。按照我的认知，副业指签订劳动或者劳务合同，是不应该的行为，但这又是一个口袋罪，只有”禁止从事副业”这六个字，没有详细解释，这也是很常见的口头通知。为此有一名同事，微信里做微商卖东西被开除。
分享这个例子，想说明公司的初衷可能是好的，但实行起来不考虑实际情况，没有明文判决，全靠大佬一句话。&lt;/p&gt;
&lt;h3 id=&#34;记录日记&#34;&gt;记录日记&lt;/h3&gt;
&lt;p&gt;“正经人谁写日记呢”，确实，我不是正经人，因为我 2019年末 就想辞职了，于是专门开了一个笔记本，记录心态爆炸的瞬间，下文摘自日记。离职总是一瞬间的事，真正忙起来可能就懒得离职了，因此专门记录，防止忘掉伤痛。
2019年11月
腱鞘炎，手快断了，去医院，医生说少活动
2019年11月
接到业务，本来我只是提供一些分析和参考，对网络编程完全不懂，现学现卖，补充大量不知道的知识，压力巨大，虽然我最后搞定了，但这样的功能交给专业的人来写，比我现学要好很多。那段时间每天做噩梦，非常难受。
2019年11-12月
接到业务的测试需求，不提供账号，不提供手机，让我凭空操作；
2019年12月
生病了，基本所有人都生病了一遍，挨个传染，办公室人员太密集了；
取饭时候排队的人太多了，吃饭会路过感染区，导致大面积感染，状态堪忧；
生病发烧快死了，至少有女朋友可以照顾我；
…
再早的爷不记得了&lt;/p&gt;
&lt;h3 id=&#34;跨年值班&#34;&gt;跨年值班&lt;/h3&gt;
&lt;p&gt;说出来感觉又是个笑话，2019年快跨年了而31日是上班的，12月20日左右，作为年轻人我当然要请假出去玩，已经请好假。那么有意思的来了，大约12月25日突然发布消息，31日跨年夜要求全体员工值守在办公室，凌晨一点才下班，没有特殊原因不许请假。
看到这个消息又一次惊呆了，第一次听说跨年还有大促，而且提前几天才通知，这不是搞人么，于是脉脉就有经典的帖子：”跨年时候整个公司的人都在办公室，大家相亲相爱，就像一个大家庭”，太讽刺了。&lt;/p&gt;
&lt;h3 id=&#34;尾声&#34;&gt;尾声&lt;/h3&gt;
&lt;p&gt;这一年我仍然在认真搬砖，拿到了优秀的绩效，但和上一年相比，我已经不大愿意推荐朋友们来拼多多了，毕竟我自己也想走，没必要带别人来，公司越来越严厉，对待员工越来越差。
另外2020年初，爆发了疫情，世界都开始重新洗牌，我的离职计划也打乱了。&lt;/p&gt;
&lt;h1 id=&#34;2020&#34;&gt;2020&lt;/h1&gt;
&lt;p&gt;加速，加速，加速&lt;/p&gt;
&lt;h3 id=&#34;春节过后&#34;&gt;春节过后&lt;/h3&gt;
&lt;p&gt;正月初七后，由于大佬们的意见，部门主管们鼓励上海员工回去上班，这个部分懒得讲了，已经被人吐槽烂了，公司公然漠视上海的制度，已经忽视员工的健康和安全了。
上班后，我问湖北来的同事，公司表面上说没上班的日子可以用周末和值班来补，暗示当月工资照常发，据同事说，当月工资已经被扣过了，gtmd，加班的话过年才给，我也懒得加班了，就当自费请假了。&lt;/p&gt;
&lt;h3 id=&#34;为什么不离职&#34;&gt;为什么不离职&lt;/h3&gt;
&lt;p&gt;是想走的，由于2020整年疫情带来很大的不确定性，浑浑噩噩一年也可以这么过去。我个人么，我承认，由于工资涨了，女朋友也不着急，外界环境扑朔迷离，决定再干一段时间再走，这一干，就是一整年了，这一年真是见证各种历史。&lt;/p&gt;
&lt;h3 id=&#34;消除伏笔-1&#34;&gt;消除伏笔&lt;/h3&gt;
&lt;p&gt;伏笔4：取消美餐
可能由于公司非常非常非常喜欢让员工定点进食，早一秒钟都不行。假设员工晚饭点了面包，就可以在外面吃饭，饭后回来带走面包，就绕过了”奴隶”的进食时间。
按照公司的管理经验，出去吃饭是不本分的行为，毕竟这表示公司的饭不好吃，是大逆不道的行为，于是取消晚饭的甜点，取消周黑鸭。
并且由于疫情的原因，2020年不再使用美餐作为供应商，原先20+的选择，现在只有4家餐饮可以选择，这个不是重点。重点在于，公司依然执行严格的进食时间，11:59:59后才允许去拿，原先是货架上的物品，现在需要供应商手动发放，效率应该是更低了。
伏笔5：办公室进行手机信号屏蔽
连接手机热点，称为自费上网已经持续了好几个月了，一直用的挺好的，办公网只有10M带宽，下载个东西慢的要死。
2020年8月，突然发现每天一到11点，手机网络剧烈卡顿，接近无法使用的状态。由于需要上网的设备很多，平时测试时我用热点，在那之后，我的工作就受到严重的阻碍。
一开始我认为是蜂窝网接入者过多，导致网络卡顿无法使用，经过调研发现是区域问题，仅有我所在的工位无法使用流量，其他楼层、其他工区都可以。慢慢的，各个楼层，各个工区也无法使用，越来越多的证据表示是信号干扰，怎么说呢，只能祝拼多多越办越好了呗。&lt;/p&gt;
&lt;h3 id=&#34;久病成医&#34;&gt;久病成医&lt;/h3&gt;
&lt;p&gt;公司不喜欢提前发放假通知，一般都是放假前几天才通知，由于我是老本分人了，早已对假期预测了如指掌。例如清明、端午一定会扣一天，国庆一定会扣两天，大促的周末不休息等。
入职不久的员工经常来问我假期安排，每次我预测得都很准确，我知道公司会克扣假期，甚至连规律都总结出来了，不知道是该不该笑一下。&lt;/p&gt;
&lt;h3 id=&#34;记录日记-1&#34;&gt;记录日记&lt;/h3&gt;
&lt;p&gt;2020至今
办公室网络常年爆炸，访问外网慢的要死，尤其是 github 和 github-release
2020年03月07日
第N次接到傻逼的需求，大老板缺乏安全感，证明其他大厂APP没有偷拼多多的数据
2020年03月07日
连续 3 天工作时间超 12h，左胳膊肌肉疼
2020年03月07日
巧妇难为无米之炊，开局一张图，无法复现全靠猜，手机也急缺，难
2020年05月09日
wifi又双叒叕改了，瞎屏蔽应用商店，每天认证一次
2020年05月11日
办公司wifi把应用商店、厂商官网给墙了
2020年05月11日
接到傻逼需求，为防止被抹黑，需要对某现象进行技术上的解释，就这一件小事还非常着急，跟线上故障似的
2020年08月17日
每到中午网络就巨差，今天4G 直接断网了，艹
2020年08月25日
是真的信号干扰断网，迷，只能离线办公
2020年09月01日
gitlab 的 readme.md 改为不展示，文档不公开，严重影响工作效率，不知道哪个脑残想出来的
2020年12月10日
办公室也太吵了，隔壁就跟网吧开黑一样，神经衰弱无法上班，耳塞和降噪耳机也无法解决问题，还好我要离职了&lt;/p&gt;
&lt;h3 id=&#34;公众事件&#34;&gt;公众事件&lt;/h3&gt;
&lt;p&gt;2020年我对拼多多感情急速下降，其实和公众的认知是一致的，无非以下几个事件
1、大楼禁止员工穿拖鞋，被保安锁喉并且轻伤，公司未做任何声明；
2、由于没有坑位，情急之下在男士便池里大便，公司未做任何声明；
3、网传公司使用刁钻的计算方式，给离职员工发放0.3倍的周日加班费（正常结算是1.0倍，劳动法规定是2.0倍）；
4、黄峥公开表示硬核奋斗模式，非技术员工被抽调去多多买菜，全年无休，租房中介都和我说你们公司最近走了好多人；
5、略，其实公众都知道的。&lt;/p&gt;
&lt;h3 id=&#34;又一次校招&#34;&gt;又一次校招&lt;/h3&gt;
&lt;p&gt;校招季来了。好消息和坏消息，好消息是今年校招生的水平比去年强很多了；坏消息呢，公司最近出了很多负面事件，学生也会来问评价和看法，说实话我挺难受的。&lt;/p&gt;
&lt;h3 id=&#34;丧心病狂的通宵值班&#34;&gt;丧心病狂的通宵值班&lt;/h3&gt;
&lt;p&gt;由于2019年的618、1010、1111、1212、跨年被安排了，我对即将发生的一切骚操作都不再感到意外，最经典的是十二月。
双十二大促，员工需要连续上班 13 天，并且12.11、12.12需要全员加班到凌晨一点，然后12.31再次全员加班到凌晨一点。因为我已经提交离职了，没有必要再为公司卖命，这三天依然是没有额外工资的，说白了就是全员白嫖哈，你只是个机器人，服从命令就可以了。&lt;/p&gt;
&lt;h3 id=&#34;提出辞职&#34;&gt;提出辞职&lt;/h3&gt;
&lt;p&gt;女朋友和我异地快两年了，一直这样也不是个办法，反正我也厌恶公司的行为，混一混个年终奖就走吧。
2020年12月9日，我无法忍受公司的文化和制度，flanker也走了，没什么好留恋的了，我自己也有家庭原因，决定离开这个鬼地方，网传公司有卡离职的操作，当天写了辞职信并且ems。这里打住，我将可能会有更精彩的第二篇文章《如何不体面地从拼多多离职》。&lt;/p&gt;
&lt;h3 id=&#34;何为本分&#34;&gt;何为本分&lt;/h3&gt;
&lt;p&gt;本来以为2021年1月10日就可以悄无声息地离开了，不料2021年更精彩，就不用我多说了吧，猝死、跳楼、看到救护车被开除、围观开除被开除。。。至此，拼多多在我心中已完全黑化，没有一丝人性了。
因为我只在腾讯和拼多多工作过，这里我要表扬一下腾讯，最开始的校招培训挺多是关于历史和价值观的，往坏了说是洗脑，至今我还记得是合作、正直、创新、进取。以前我总认为价值观这个东西没什么用，现在觉得腾讯价值观还是正确的，我在离开拼多多时思考，本分到底是什么，我粗浅地谈一下我的理解，不代表官方解释，期待有一天官方能有个解释。
强调员工遵守公司的一切安排，无论安排合理与否；强调不做任何与公司无关的事，即使是在休息时间；强调你就是公司的一个包身工，一个雇佣兵，一个人肉电池，让你做什么你就做什么。
拼多多是没有灵魂的，本分二字早已变味了，成为奴役员工的工具，私下调侃，例如”今天早上你本分了吗”指”今天11:00你打卡了吗”，”中午要去本分吗”指”中午在办公室吃还是去外面吃”，”今天晚上我不本分了”指”今天晚上我不加班，要早点跑了”，”你这个人不本分”指”你在发表反动言论了”，”这周日我不来本分了”指”这周日老子不来加班了”,”我以后永远都不本分了”指”我要离职了”。
引用某位同事的反动言论：”在拼多多，除了给钱之外，其他事别多嘴，发生任何事情都不要意外”，颇有一种2077夜之城的感觉。&lt;/p&gt;
&lt;h1 id=&#34;结语&#34;&gt;结语&lt;/h1&gt;
&lt;p&gt;劝学弟学妹不要来并不是因为加班严重，而是这个地方没有把你当做一个人，我自认为员工是一个电池、奴隶、包身工，这个地方是血汗工厂、监狱、集中营。拼多多给钱的确实比其他公司要多，如果家境普通当下缺钱的话可以来卖命，否则还是另寻他处吧。我并没有后悔加入拼多多，每个时代都有其局限性，2018年的拼多多还不是现在的拼多多，当时对我来说是最好的选择了，如果是2020年找工作，我是绝对不会考虑这个地方的。
花了两天时间写完了我三年的回忆录，现在看着其实第一年的回忆最多，大部分都是美好的；后两年虽然痛苦，但能想起来的好像也就这么多，我认为是加班实在太严重了，无法思考我到底讨厌什么东西，还好有个日记做记录。还有其他不满是关于工作的，动不动就是”这是来自 叮当（CTO）、阿布（COO） 的紧急需求”，”这个方案不合理，但是是阿布说的”，出于保密我不能说太多，现在看看，后两年更多是流水账吧，没什么要害，只是一个一线员工的感受而已。
后两年有多忙呢，举个例子，我平时购物都是女朋友负责的，身边大大小小的事情都由她来分担，甚至买房也是她负责，因为我太忙了无法考虑这些事情，我真的非常感谢她也非常爱她，在我离开拼多多后，终于有时间陪伴她了。
最后把2020年的打卡记录分享一下吧，我的工时不算长，一切尽在不言中。&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/share/">Share</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/">Tags</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>百度PHP工程师面试题和答案解析</title>
                <link>https://ulovei.net/tech/baidu-php-of-interview-questions/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/baidu-php-of-interview-questions/</guid>
                <pubDate>Fri, 29 Jan 2021 10:54:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;h3 id=&#34;百度php工程师面试题和答案解析&#34;&gt;百度PHP工程师面试题和答案解析&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;一、单选题（共10题，每题5分&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.以下代码输出的结果是？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;json_encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A. [0,1,2,3]&lt;br&gt;
B. [1,3,5,7,5]&lt;br&gt;
C. [1,2,3,4,5]&lt;br&gt;
D. [0,1,2,3,5]&lt;/p&gt;
&lt;p&gt;参考答案：D&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;考的是数组+和array_merge的区别 当下标为数值时，array_merge()不会覆盖掉原来的值，但array＋array合并数组则会把最先出现的值作为最终结果返回，而把后面的数组拥有相同键名的那些值“抛弃”掉（不是覆盖）. 当下标为字符时，array＋array仍然把最先出现的值作为最终结果返回，而把后面的数组拥有相同键名的那些值“抛弃”掉，但array_merge()此时会覆盖掉前面相同键名的值.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2.以下代码执行结果是？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;get_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A.0&lt;/p&gt;
&lt;p&gt;B.1&lt;/p&gt;
&lt;p&gt;C.2&lt;/p&gt;
&lt;p&gt;D.3&lt;/p&gt;
&lt;p&gt;参考答案：B&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;如果你回答 2 ，恭喜，你掉入陷阱了。 其实这道题主要考两点，第一点是static静态类型。这种的值永远都是静态的，第一次调用声明等于0，并且自增等于1。第二次调用，1再自增就等于2。但其实这里还有一道陷阱，那就是++a与a++的区别，前++是先自增，后++是先返回值再自增，所以结果等于 1。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;3.以下PHP代码执行的结果是？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;json_encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A、[1,2,3]&lt;/p&gt;
&lt;p&gt;B、[1,2,2]&lt;/p&gt;
&lt;p&gt;C、[1,1,2]&lt;/p&gt;
&lt;p&gt;D、[1,3,2]&lt;/p&gt;
&lt;p&gt;参考答案：B&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;在 PHP 中，foreach 结束后，循环中的索引值（index）及內容（value）並不会被重置。 所以最后的 $v还指向最后一个元素，再次循环，就会把最后个元素的值修改掉了。&lt;/p&gt;
&lt;p&gt;解决的办法是，循环完毕之后，用unset($v); &lt;a href=&#34;https://www.php.net/manual/en/control-structures.foreach.php&#34;&gt;https://www.php.net/manual/en/control-structures.foreach.php&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;4.php执行过程的顺序正确的是？&lt;/p&gt;
&lt;p&gt;A、扫描-&amp;gt;解析-&amp;gt;编译-&amp;gt;执行-&amp;gt;输出&lt;/p&gt;
&lt;p&gt;B、扫描-&amp;gt;解析-&amp;gt;执行-&amp;gt;编译-&amp;gt;输出&lt;/p&gt;
&lt;p&gt;C、扫描-&amp;gt;编译-&amp;gt;解析-&amp;gt;执行-&amp;gt;输出&lt;/p&gt;
&lt;p&gt;D、扫描-&amp;gt;执行-&amp;gt;编译-&amp;gt;解析-&amp;gt;输出&lt;/p&gt;
&lt;p&gt;参考答案：A&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;PHP简化执行过程： 1.扫描(scanning) ,将index.php内容变成一个个语言片段(token) 2.解析(parsing) , 将一个个语言片段变成有意义的表达式 3.编译(complication),将表达式编译成中间码(opcode) 4.执行(execution),将中间码一条一条的执行 5.输出(output buffer),将要输出的内容输出到缓冲区&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;5.php垃圾回收机制的说法错误的是？&lt;/p&gt;
&lt;p&gt;A、在一个垃圾周期中，通过检查引用计数是否减1，并且检查哪些变量容器的引用次数是零，来发现哪部分是垃圾&lt;/p&gt;
&lt;p&gt;B、可以通过调用gc_enable() 和 gc_disable()函数来打开和关闭垃圾回收机制&lt;/p&gt;
&lt;p&gt;C、通过清理未被使用的变量来节省内存的占用&lt;/p&gt;
&lt;p&gt;D、php代码执行完毕后会自动执行垃圾回收，所以不需要手动执行垃圾回收&lt;/p&gt;
&lt;p&gt;参考答案：D&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;php一段代码有可能要长时间执行，但若此期间有未引用的变量的话，就会占用内存的空间，导致运行缓慢等问题&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;6.关于XSS防御，错误的是？&lt;/p&gt;
&lt;p&gt;A、禁止字符&lt;/p&gt;
&lt;p&gt;B、限制字符(reg_match)&lt;/p&gt;
&lt;p&gt;C、过滤(preg_replace)&lt;/p&gt;
&lt;p&gt;D、转义标签(htmlspecialchars)&lt;/p&gt;
&lt;p&gt;参考答案：A&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;转义标签(htmlspecialchars) 限制字符(reg_match) 过滤(preg_replace) http only 模板引擎&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;7.有一个文件ip.txt，每行一条ip记录，共若干行，下面哪个命令可以实现“统计出现次数最多的前3个ip及其次数”？（ ）&lt;/p&gt;
&lt;p&gt;A、uniq -c ip.txt&lt;/p&gt;
&lt;p&gt;B、sort -nr ip.txt | uniq -c | sort -nr | head -n 3&lt;/p&gt;
&lt;p&gt;C、cat ip.txt | count -n | sort -rn | head -n 3&lt;/p&gt;
&lt;p&gt;D、cat ip.txt | count -n&lt;/p&gt;
&lt;p&gt;参考答案：B&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;本题利用管道符&amp;quot;|&amp;quot;组合多个命令，uniq -c filename用于去除冗余并统计每一行出现的次数。 sort -r指逆序排序，-n指按数字字符串大小排序 head指定数量。 剩下的二选一交给运气。&lt;/p&gt;
&lt;p&gt;正确的命令应该为： sort -nr ip.txt | uniq -c | sort -nr | head -n 3 第一次排序，把ip按顺序排列，因为第二个uniq只会合并相邻项 第二次排序，才是把ip按出现次序大小从大到小排列 最后取前三项结果。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;8.Mysql索引使用的B-Tree描述错误的是？&lt;/p&gt;
&lt;p&gt;A、每个非叶子结点由n-1个key和n个指针组成，其中d&amp;lt;=n&amp;lt;=2d；&lt;/p&gt;
&lt;p&gt;B、每个叶子结点至少包含一个key和两个指针&lt;/p&gt;
&lt;p&gt;C、所有叶结点都在同一层，深度等于树高h&lt;/p&gt;
&lt;p&gt;D、一个结点中的key从左至右递减排列&lt;/p&gt;
&lt;p&gt;参考答案：D&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;B-Tree是满足条件： d&amp;gt;=2，即B-Tree的度； h为B-Tree的高； 每个非叶子结点由n-1个key和n个指针组成，其中d&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;9.下列哪个是创建一个每周三01:00~04:00每3分钟执行执行一次的crontab指令？&lt;/p&gt;
&lt;p&gt;A、* 1,4 * * 3 /bin/bash /home/sijiaomao/ok.sh&lt;/p&gt;
&lt;p&gt;B、*/3 1,4 * * 3 /bin/bash /home/sijiaomao/ok.sh&lt;/p&gt;
&lt;p&gt;C、*/3 1-4 * * 3 /bin/bash /home/sijiaomao/ok.sh&lt;/p&gt;
&lt;p&gt;D、*/3 1-4 * * * /bin/bash /home/sijiaomao/ok.sh&lt;/p&gt;
&lt;p&gt;参考答案：C&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;A：每周三的1时4时每分钟执行一次 B：每周三的1时4时每3分钟执行一次 C：满足要求 D：每天的1时4时每3分钟执行一次&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;10.正则的引擎表述错误的是？&lt;/p&gt;
&lt;p&gt;A、正则引擎主要可以分为两大类：一种是DFA，一种是NFA。&lt;/p&gt;
&lt;p&gt;B、一般而论，NFA引擎则搜索更快一些。但是DFA以表达式为主导，更容易操纵，因此一般程序员更偏爱DFA引擎！&lt;/p&gt;
&lt;p&gt;C、NFA表达式主导,DFA文本主导.&lt;/p&gt;
&lt;p&gt;D、可以使用是否支持忽略优先量词和分组捕获来判断引擎类型：支持 NFA,不支持 DFA&lt;/p&gt;
&lt;p&gt;参考答案：B&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;正确的说法应该是：一般而论，DFA引擎则搜索更快一些。但是NFA以表达式为主导，更容易操纵，因此一般程序员更偏爱NFA引擎！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;二、多选题（共10题，每题5分）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.HTTP中GET与POST的区别有哪些？&lt;/p&gt;
&lt;p&gt;A、GET在浏览器回退时是无害的，而POST会再次提交请求&lt;/p&gt;
&lt;p&gt;B、GET请求只能进行url编码，而POST支持多种编码方式&lt;/p&gt;
&lt;p&gt;C、GET请求会被浏览器主动cache，而POST不会，除非手动设置。&lt;/p&gt;
&lt;p&gt;D、GET产生一个TCP数据包，POST产生两个TCP数据包。&lt;/p&gt;
&lt;p&gt;参考答案：A,B,C,D&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;HTTP中GET与POST的区别如下，注意最后一条&lt;/p&gt;
&lt;p&gt;·GET在浏览器回退时是无害的，而POST会再次提交请求。&lt;/p&gt;
&lt;p&gt;·GET产生的URL地址可以被Bookmark，而POST不可以。&lt;/p&gt;
&lt;p&gt;·GET请求会被浏览器主动cache，而POST不会，除非手动设置。&lt;/p&gt;
&lt;p&gt;·GET请求只能进行url编码，而POST支持多种编码方式。&lt;/p&gt;
&lt;p&gt;·GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。&lt;/p&gt;
&lt;p&gt;·GET请求在URL中传送的参数是有长度限制的，而POST没有。&lt;/p&gt;
&lt;p&gt;·对参数的数据类型，GET只接受ASCII字符，而POST没有限制。&lt;/p&gt;
&lt;p&gt;·GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。&lt;/p&gt;
&lt;p&gt;·GET参数通过URL传递，POST放在Request body中。&lt;/p&gt;
&lt;p&gt;·GET产生一个TCP数据包，POST产生两个TCP数据包。&lt;/p&gt;
&lt;p&gt;关于最后一条，详情参考 &lt;a href=&#34;https://blog.csdn.net/happy_xiahuixiax/article/details/72859762&#34;&gt;https://blog.csdn.net/happy_xiahuixiax/article/details/72859762&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2.MySQL有一个复合索引：INDEX(&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;)，以下查询能用上索引的有？&lt;/p&gt;
&lt;p&gt;A、select * from users where a = 1 and b = 2&lt;/p&gt;
&lt;p&gt;B、select * from users where b = 2 and a = 1&lt;/p&gt;
&lt;p&gt;C、select * from users where a = 2 and c = 1&lt;/p&gt;
&lt;p&gt;D、select * from users where b = 2 and c = 1&lt;/p&gt;
&lt;p&gt;参考答案：A,B,C&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;请牢记最左前缀原则&lt;/p&gt;
&lt;p&gt;使用方式 能否用上索引&lt;/p&gt;
&lt;p&gt;select * from users where a = 1 and b = 2 能用上a、b&lt;/p&gt;
&lt;p&gt;select * from users where b = 2 and a = 1 能用上a、b（有MySQL查询优化器）&lt;/p&gt;
&lt;p&gt;select * from users where a = 1 and b = 2 能用上a&lt;/p&gt;
&lt;p&gt;select * from users where a = 1 and b = 2 不能&lt;/p&gt;
&lt;p&gt;选项D 无法用上索引。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;3.为什么大型网站要使用消息队列？&lt;/p&gt;
&lt;p&gt;A、解耦&lt;/p&gt;
&lt;p&gt;B、异步&lt;/p&gt;
&lt;p&gt;C、削峰&lt;/p&gt;
&lt;p&gt;D、大数据处理&lt;/p&gt;
&lt;p&gt;参考答案：A,B,C&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;消息队列常见的使用场景有很多，但是比较核心的有 3 个：解耦、异步、削峰 大数据处理，有相应的处理办法，和消息队列关系不大。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;3.为什么大型网站要使用消息队列？&lt;/p&gt;
&lt;p&gt;A、解耦&lt;/p&gt;
&lt;p&gt;B、异步&lt;/p&gt;
&lt;p&gt;C、削峰&lt;/p&gt;
&lt;p&gt;D、大数据处理&lt;/p&gt;
&lt;p&gt;参考答案：A,B,C&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;消息队列常见的使用场景有很多，但是比较核心的有 3 个：解耦、异步、削峰 大数据处理，有相应的处理办法，和消息队列关系不大。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;5关于缓存雪崩的事前事中事后的解决方案正确的有？&lt;/p&gt;
&lt;p&gt;A、事前：进行系统压力测试，在负载均衡层做限流处理，过载丢弃请求或者进入队列&lt;/p&gt;
&lt;p&gt;B、事前：redis 高可用，主从+哨兵，redis cluster，避免全盘崩溃。&lt;/p&gt;
&lt;p&gt;C、事中：本地 ehcache 缓存 + hystrix 限流&amp;amp;降级，避免 MySQL 被打死。&lt;/p&gt;
&lt;p&gt;D、事后：redis 持久化，一旦重启，自动从磁盘上加载数据，快速恢复缓存数据。&lt;/p&gt;
&lt;p&gt;参考答案：A,B,C,D&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;缓存雪崩的事前事中事后的解决方案如下。&lt;/p&gt;
&lt;p&gt;·事前：进行系统压力测试，在负载均衡层做限流处理，过载丢弃请求或者进入队列&lt;/p&gt;
&lt;p&gt;·事前：redis 高可用，主从+哨兵，redis cluster，避免全盘崩溃。&lt;/p&gt;
&lt;p&gt;·事中：本地 ehcache 缓存 + hystrix 限流&amp;amp;降级，避免 MySQL 被打死。&lt;/p&gt;
&lt;p&gt;·事后：redis 持久化，一旦重启，自动从磁盘上加载数据，快速恢复缓存数据。&lt;/p&gt;
&lt;p&gt;6.设计一个高并发系统，需要重点考虑的问题有？&lt;/p&gt;
&lt;p&gt;A、系统拆分&lt;/p&gt;
&lt;p&gt;B、缓存&lt;/p&gt;
&lt;p&gt;C、MQ&lt;/p&gt;
&lt;p&gt;D、分库分表&lt;/p&gt;
&lt;p&gt;E、读写分离&lt;/p&gt;
&lt;p&gt;F、ElasticSearch&lt;/p&gt;
&lt;p&gt;参考答案：A,B,C,D,E,F&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;如何设计一个高并发系统？&lt;/p&gt;
&lt;p&gt;系统拆分 将一个系统拆分为多个子系统，用 dubbo 来搞。然后每个系统连一个数据库，这样本来就一个库，现在多个数据库，不也可以扛高并发么。&lt;/p&gt;
&lt;p&gt;缓存 缓存，必须得用缓存。大部分的高并发场景，都是读多写少，那你完全可以在数据库和缓存里都写一份，然后读的时候大量走缓存不就得了。毕竟人家 redis 轻轻松松单机几万的并发。所以你可以考虑考虑你的项目里，那些承载主要请求的读场景，怎么用缓存来抗高并发。&lt;/p&gt;
&lt;p&gt;MQ MQ，必须得用 MQ。可能你还是会出现高并发写的场景，比如说一个业务操作里要频繁搞数据库几十次，增删改增删改，疯了。那高并发绝对搞挂你的系统，你要是用 redis 来承载写那肯定不行，人家是缓存，数据随时就被 LRU 了，数据格式还无比简单，没有事务支持。所以该用 mysql 还得用 mysql 啊。那你咋办？用 MQ 吧，大量的写请求灌入 MQ 里，排队慢慢玩儿，后边系统消费后慢慢写，控制在 mysql 承载范围之内。所以你得考虑考虑你的项目里，那些承载复杂写业务逻辑的场景里，如何用 MQ 来异步写，提升并发性。MQ 单机抗几万并发也是 ok 的，这个之前还特意说过。&lt;/p&gt;
&lt;p&gt;分库分表 分库分表，可能到了最后数据库层面还是免不了抗高并发的要求，好吧，那么就将一个数据库拆分为多个库，多个库来扛更高的并发；然后将一个表拆分为多个表，每个表的数据量保持少一点，提高 sql 跑的性能。&lt;/p&gt;
&lt;p&gt;读写分离 读写分离，这个就是说大部分时候数据库可能也是读多写少，没必要所有请求都集中在一个库上吧，可以搞个主从架构，主库写入，从库读取，搞一个读写分离。读流量太多的时候，还可以加更多的从库。&lt;/p&gt;
&lt;p&gt;ElasticSearch Elasticsearch，简称 es。es 是分布式的，可以随便扩容，分布式天然就可以支撑高并发，因为动不动就可以扩容加机器来扛更高的并发。那么一些比较简单的查询、统计类的操作，可以考虑用 es 来承载，还有一些全文搜索类的操作，也可以考虑用 es 来承载。&lt;/p&gt;
&lt;p&gt;上面的 6 点，基本就是高并发系统肯定要干的一些事儿，大家可以仔细结合之前讲过的知识考虑一下，到时候你可以系统的把这块阐述一下，然后每个部分要注意哪些问题，之前都讲过了，你都可以阐述阐述，表明你对这块是有点积累的。&lt;/p&gt;
&lt;p&gt;说句实话，毕竟你真正厉害的一点，不是在于弄明白一些技术，或者大概知道一个高并发系统应该长什么样？其实实际上在真正的复杂的业务系统里，做高并发要远远比上面提到的点要复杂几十倍到上百倍。你需要考虑：哪些需要分库分表，哪些不需要分库分表，单库单表跟分库分表如何 join，哪些数据要放到缓存里去，放哪些数据才可以扛住高并发的请求，你需要完成对一个复杂业务系统的分析之后，然后逐步逐步的加入高并发的系统架构的改造，这个过程是无比复杂的，一旦做过一次，并且做好了，你在这个市场上就会非常的吃香。&lt;/p&gt;
&lt;p&gt;其实大部分公司，真正看重的，不是说你掌握高并发相关的一些基本的架构知识，架构中的一些技术，RocketMQ、Kafka、Redis、Elasticsearch，高并发这一块，你了解了，也只能是次一等的人才。对一个有几十万行代码的复杂的分布式系统，一步一步架构、设计以及实践过高并发架构的人，这个经验是难能可贵的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;7.关于PHP-FPM子进程数量说法正确的有？&lt;/p&gt;
&lt;p&gt;A、PHP-FPM 子进程数量不能太多，太多了增加进程管理的开销以及上下文切换的开销&lt;/p&gt;
&lt;p&gt;B、dynamic 方式下，最合适的子进程数量为 在 N + 20% 和 M / m 之间 （N 是 CPU 内核数量，M 是 PHP 能利用的内存数量，m 是每个 PHP 进程平均使用的内存数量）&lt;/p&gt;
&lt;p&gt;C、static方式：M / (m * 1.2) （M 是 PHP 能利用的内存数量，m 是每个 PHP 进程平均使用的内存数量）&lt;/p&gt;
&lt;p&gt;D、pm.max_requests 可以随便设置 ,但是为了预防内存泄漏的风险，还是设置一个合理的数比较好&lt;/p&gt;
&lt;p&gt;参考答案：A,B,C,D&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;首先，我们关注下 PHP-FPM 的运行方式：&lt;/p&gt;
&lt;p&gt;·static ：表示在 php-fpm 运行时直接 fork 出 pm.max_chindren 个子进程，&lt;/p&gt;
&lt;p&gt;·dynamic：表示，运行时 fork 出 start_servers 个进程，随着负载的情况，动态的调整，最多不超过 max_children 个进程。&lt;/p&gt;
&lt;p&gt;一般推荐用 static ，优点是不用动态的判断负载情况，提升性能；缺点是多占用些系统内存资源。&lt;/p&gt;
&lt;p&gt;PHP-FPM 子进程数量，是不是越多越好？ 当然不是，pm.max_chindren，进程多了，增加进程管理的开销以及上下文切换的开销。更核心的是，能并发执行的 php-fpm 进程不会超过 cpu 个数。如何设置，取决于你的代码。如果代码是 CPU 计算密集型的，pm.max_chindren 不能超过 CPU 的内核数。如果不是，那么将 pm.max_chindren 的值大于 CPU 的内核数，是非常明智的。国外技术大拿给出适用于 dynamic 方式的公式： 在 N + 20% 和 M / m 之间。&lt;/p&gt;
&lt;p&gt;.N 是 CPU 内核数量。&lt;/p&gt;
&lt;p&gt;.M 是 PHP 能利用的内存数量。&lt;/p&gt;
&lt;p&gt;.m 是每个 PHP 进程平均使用的内存数量。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;static方式的公式：M / (m 1.2)&lt;/em&gt;*&lt;/p&gt;
&lt;p&gt;当然，还有一种保险的方式，来配置 max_children。 先把 max_childnren 设置成一个比较大的值。稳定运行一段时间后，观察 php-fpm 的 status 里的 max active processes 是多少，然后把 max_children 配置比它大一些就可以了。&lt;/p&gt;
&lt;p&gt;pm.max_requests：指的是每个子进程在处理了多少个请求数量之后就重启。这个参数，理论上可以随便设置，但是为了预防内存泄漏的风险，还是设置一个合理的数比较好。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;8.关于Kafka、ActiveMQ、RabbitMQ、RocketMQ说法正确的有？&lt;/p&gt;
&lt;p&gt;A、ActiveMQ 基于 erlang 开发，并发能力很强，性能极好，延时很低&lt;/p&gt;
&lt;p&gt;B、RocketMQ topic 可以达到几百/几千的级别，吞吐量会有较小幅度的下降，在同等机器下，可以支撑大量的 topic&lt;/p&gt;
&lt;p&gt;C、RabbitMQ时效性是微秒级，这是 RabbitMQ 的一大特点，延迟最低&lt;/p&gt;
&lt;p&gt;D、Kafka 单机吞吐量 10 万级，高吞吐，一般配合大数据类的系统来进行实时数据计算、日志采集等场景&lt;/p&gt;
&lt;p&gt;参考答案：B,C,D&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;ActiveMQ 基于 Java 开发的， RabbitMQ 是基于 erlang 开发的。 所以选项A 错误。 B、C、D都正确。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;ActiveMQ&lt;/th&gt;
&lt;th&gt;RabbitMQ&lt;/th&gt;
&lt;th&gt;RocketMQ&lt;/th&gt;
&lt;th&gt;Kafka&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;单机吞吐量&lt;/td&gt;
&lt;td&gt;万级，比 RocketMQ、Kafka 低一个数量级&lt;/td&gt;
&lt;td&gt;同 ActiveMQ&lt;/td&gt;
&lt;td&gt;10 万级，支撑高吞吐&lt;/td&gt;
&lt;td&gt;10 万级，高吞吐，一般配合大数据类的系统来进行实时数据计算、日志采集等场景&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;topic 数量对吞吐量的影响&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;topic 可以达到几百/几千的级别，吞吐量会有较小幅度的下降，这是 RocketMQ 的一大优势，在同等机器下，可以支撑大量的 topic&lt;/td&gt;
&lt;td&gt;topic 从几十到几百个时候，吞吐量会大幅度下降，在同等机器下，Kafka 尽量保证 topic 数量不要过多，如果要支撑大规模的 topic，需要增加更多的机器资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;时效性&lt;/td&gt;
&lt;td&gt;ms 级&lt;/td&gt;
&lt;td&gt;微秒级，这是 RabbitMQ 的一大特点，延迟最低&lt;/td&gt;
&lt;td&gt;ms 级&lt;/td&gt;
&lt;td&gt;延迟在 ms 级以内&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可用性&lt;/td&gt;
&lt;td&gt;高，基于主从架构实现高可用&lt;/td&gt;
&lt;td&gt;同 ActiveMQ&lt;/td&gt;
&lt;td&gt;非常高，分布式架构&lt;/td&gt;
&lt;td&gt;非常高，分布式，一个数据多个副本，少数机器宕机，不会丢失数据，不会导致不可用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;消息可靠性&lt;/td&gt;
&lt;td&gt;有较低的概率丢失数据&lt;/td&gt;
&lt;td&gt;基本不丢&lt;/td&gt;
&lt;td&gt;经过参数优化配置，可以做到 0 丢失&lt;/td&gt;
&lt;td&gt;同 RocketMQ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;功能支持&lt;/td&gt;
&lt;td&gt;MQ 领域的功能极其完备&lt;/td&gt;
&lt;td&gt;基于 erlang 开发，并发能力很强，性能极好，延时很低&lt;/td&gt;
&lt;td&gt;MQ 功能较为完善，还是分布式的，扩展性好&lt;/td&gt;
&lt;td&gt;功能较为简单，主要支持简单的 MQ 功能，在大数据领域的实时计算以及日志采集被大规模使用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;9.分库分表之后，id 主键如何处理？&lt;/p&gt;
&lt;p&gt;A、单库生成自增 id&lt;/p&gt;
&lt;p&gt;B、设置数据库 sequence 或者表自增字段步长&lt;/p&gt;
&lt;p&gt;C、UUID&lt;/p&gt;
&lt;p&gt;D、snowflake 算法&lt;/p&gt;
&lt;p&gt;参考答案：A,B,C,D&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;snowflake 算法&lt;/p&gt;
&lt;p&gt;A、B、C 也是理论可行的，但是都各自有缺点，最好用snowflake 算法。&lt;/p&gt;
&lt;p&gt;snowflake 算法是 twitter 开源的分布式 id 生成算法，采用 Scala 语言实现，是把一个 64 位的 long 型的 id，1 个 bit 是不用的，用其中的 41 bit 作为毫秒数，用 10 bit 作为工作机器 id，12 bit 作为序列号。&lt;/p&gt;
&lt;p&gt;1 bit：不用，为啥呢？因为二进制里第一个 bit 为如果是 1，那么都是负数，但是我们生成的 id 都是正数，所以第一个 bit 统一都是 0。 41 bit：表示的是时间戳，单位是毫秒。41 bit 可以表示的数字多达 2^41 - 1，也就是可以标识 2^41 - 1 个毫秒值，换算成年就是表示69年的时间。 10 bit：记录工作机器 id，代表的是这个服务最多可以部署在 2^10台机器上哪，也就是1024台机器。但是 10 bit 里 5 个 bit 代表机房 id，5 个 bit 代表机器 id。意思就是最多代表 2^5个机房（32个机房），每个机房里可以代表 2^5 个机器（32台机器）。 12 bit：这个是用来记录同一个毫秒内产生的不同 id，12 bit 可以代表的最大正整数是 2^12 - 1 = 4096，也就是说可以用这个 12 bit 代表的数字来区分同一个毫秒内的 4096 个不同的 id。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;10.Redis 内存淘汰机制有哪些？&lt;/p&gt;
&lt;p&gt;A、noeviction: 当内存不足以容纳新写入数据时，新写入操作会报错&lt;/p&gt;
&lt;p&gt;B、allkeys-lru：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的 key&lt;/p&gt;
&lt;p&gt;C、volatile-lru：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的 key&lt;/p&gt;
&lt;p&gt;D、allkeys-random：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个 key。&lt;/p&gt;
&lt;p&gt;参考答案：A,B,C&lt;/p&gt;
&lt;p&gt;答案解析：&lt;/p&gt;
&lt;p&gt;redis 内存淘汰机制有以下几个：&lt;/p&gt;
&lt;p&gt;noeviction: 当内存不足以容纳新写入数据时，新写入操作会报错，这个一般没人用吧，实在是太恶心了。 allkeys-lru：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的 key（这个是最常用的）。 allkeys-random：当内存不足以容纳新写入数据时，在键空间中，随机移除某个 key，这个一般没人用吧，为啥要随机，肯定是把最近最少使用的 key 给干掉啊。 volatile-lru：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的 key（这个一般不太合适）。 volatile-random：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个 key。 volatile-ttl：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的 key 优先移除。&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/php/">PHP</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Mark Kirton眼中的世界</title>
                <link>https://ulovei.net/life/mark-kirton-of-world/</link>
                <guid isPermaLink="true">https://ulovei.net/life/mark-kirton-of-world/</guid>
                <pubDate>Thu, 28 Jan 2021 10:54:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;&lt;video autoplay=&#34;autoplay&#34; src=&#34;https://ulovei.net/video/AQoMRVGohDqf2gFo.mp4&#34; poster=&#34;/images/NKVSTLZSYN1BY3M.png&#34;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;在偶然间，浏览Twitter的时候发现这么一位神奇的艺术家：Mark Kirton，他是一位3D建模艺术家，他喜欢将一些童年时代最喜欢的卡通漫画中添加黑暗元素&lt;/p&gt;
&lt;p&gt;内容还是比较有深意的吧&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/mark-kirton-of-world/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;海绵宝宝的菠萝屋&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/af096fe499feb04ee9e93caabefe2b6c.jpg&#34; alt=&#34;海绵宝宝&#34; title=&#34;before&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/7744d6d603fc676cc68569e01ad0a367.jpg&#34; alt=&#34;海绵宝宝&#34; title=&#34;after&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/2a36d78301491c4c764bc557cd5d0906_EazdkuyXsAAfs-z_format=jpg&amp;amp;name=large.jpg&#34; alt=&#34;海绵宝宝&#34; title=&#34;歪倒的菠萝屋&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;章鱼哥的人像屋&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/8dfbc34a5d11ed9e1b7c14f91844a2cd.jpg&#34; alt=&#34;章鱼哥&#34; title=&#34;before&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/2c33b54335d330cdfa99a8c3f7db1362.jpg&#34; alt=&#34;章鱼哥&#34; title=&#34;after&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;蟹堡王&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/5c9c3a67b6997218a7d3137ab247fa08.jpg&#34; alt=&#34;蟹堡王&#34; title=&#34;before&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/b3959eb113ff7194d79413af3069eb4b.jpg&#34; alt=&#34;蟹堡王&#34; title=&#34;after&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;辛普森一家&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/57b0c573b5bdb1ba022334b92fc227f6_EB3O6P4X4AEQsNr_format=jpg&amp;amp;name=large.jpg&#34; alt=&#34;辛普森一家&#34; title=&#34;before&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/810a18cd6d800845093c4eaf9a96a6ae_EB3O6PQXUAEZwCD_format=jpg&amp;amp;name=large.jpg&#34; alt=&#34;辛普森一家&#34; title=&#34;after&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;汤姆跟杰瑞&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/2625b500275b86f7c5669cf296a51996_EAwmAOWWkAAJ7RX_format=jpg&amp;amp;name=4096x4096.jpg&#34; alt=&#34;汤姆跟杰瑞&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/88a5ddd225eb6117584aa6205002a705_EAznMLfXkAAojIQ_format=jpg&amp;amp;name=4096x4096.jpg&#34; alt=&#34;汤姆跟杰瑞&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;可能这位作者的内容太过黑暗目前的，推特账号已经被封禁了.&lt;/p&gt;
&lt;hr&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;图片源自Twitter &lt;a href=&#34;https://twitter.com/markrenders&#34;&gt;Mark Kirton&lt;/a&gt; &lt;a href=&#34;https://ulovei.net/life/mark-kirton-of-world/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/interesting/">interesting</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>分布式系统限流算法分析与实现</title>
                <link>https://ulovei.net/tech/distributed-system-a-algorithm/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/distributed-system-a-algorithm/</guid>
                <pubDate>Wed, 27 Jan 2021 09:20:55 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;h2 id=&#34;一限流的关键作用&#34;&gt;一、限流的关键作用&lt;/h2&gt;
&lt;p&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://ulovei.net/tech/distributed-system-a-algorithm/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;对于大型互联网架构中，限流的设计是必不可少的一个环节。在给定的时间内, 客户端请求次数过多, 服务器就会拦截掉部分请求，避免请求流量过大造成数据库负载高的问题。&lt;/p&gt;
&lt;h2 id=&#34;二常见限流算法利弊分析&#34;&gt;二、常见限流算法利弊分析&lt;/h2&gt;
&lt;p&gt;计数器限流主要有固定窗口计数器和滑动窗口计数器。固定窗口计数器即：在单位时间内请求数达到了所限定的数量时，请求如需不被拦截则需要等待下一个单位时间开始；滑动窗口计数器：在单位时间内请求数达到了所限定的数量时，当前时刻的请求会被拦截，随时间窗口的滑动计数器数量会变化，当计数器数量小于限定数量时请求正常执行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/7e98e131541f926bc3e243637e926e5c_739231-20201226170036781-364675528.png&#34; alt=&#34;计数器限流&#34; title=&#34;计数器限流&#34;&gt;&lt;/p&gt;
&lt;p&gt;常规计数器限流是指在一个时间段内允许一定数量的请求执行，超过最大限制则会阻止请求直到超过当前时间段为止。如上图所示，10s内限制1000个请求，在第11s的时候计数器会从0重新开始计数。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/d70abca17aab4eb853a5c19524a586da_739231-20201226170111515-708722101.png&#34; alt=&#34;常规计数器限流瞬时流量问题&#34; title=&#34;常规计数器限流瞬时流量问题&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图所示，常规计数器模式下，在第9.9s的时候执行了1000请求，在第10.1s时计数器已清0,此时又有1000请求到来，这样相当于在0.2s的时间内有2000请求，显然违背了限流的初衷。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/492fce98f86f0c0dc2241ec3911877ed_739231-20201226170449167-1359068624.png&#34; alt=&#34;滑动窗口计数器限流&#34; title=&#34;滑动窗口计数器限流&#34;&gt;&lt;/p&gt;
&lt;p&gt;滑动窗口计数器限流是在计数器限流的基础上将固定的时间段划分为若干个时间窗口，随着时间的推移，保持时间段内的滑动窗口个数，在常规计数器限流的基础上避免了瞬时流量对服务器的压力。如上图所示，0-3s内有600请求，8-13s有700请求，当第16s时新增500请求会触发限流。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/92a4822aff828f2bd08efa5e2bd95214_739231-20201226170557881-1078889711.png&#34; alt=&#34;计数器限流突刺现象&#34; title=&#34;计数器限流突刺现象&#34;&gt;&lt;/p&gt;
&lt;p&gt;特点：如果在当前时间窗口最后半秒请求数突然达到最大限制，半秒后进入下一个时间窗口开始，如果请求继续在半秒内达到周期上限，则相当于1秒内请求达到2倍的限制请求数；如果60s为一个周期，在第10s的时候服务器已处理完请求，在计数器限流模式下会使得服务器空闲50s无法处理请求。&lt;/p&gt;
&lt;p&gt;计数器限流原理简单，实现比较容易，但是也有一个痛点问题就是它的突刺现象，如上图所示，10s限制1000请求，到第2s时已达请求上限，那么在第3-10s内的请求将会持续拒绝，在服务器资源空闲的状态下会造成极大的浪费。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/d7873fe29af2ffca3eaf1b67c166c3d2_739231-20201226170642922-1782853704.png&#34; alt=&#34;漏桶限流&#34; title=&#34;漏桶限流&#34;&gt;&lt;/p&gt;
&lt;p&gt;请求进入到漏桶中，漏桶以固定的速度流出，当访问频率超过接口响应频率流速过大时拒绝请求，可以看到漏桶相当于一个队列，进队的速率不受限制，出队是固定速率。&lt;/p&gt;
&lt;p&gt;特点：由于出水速率是固定的，当突发大流量时会导致大量请求被限制，无法处理。&lt;/p&gt;
&lt;p&gt;漏桶限流，请求进入漏桶不受限制，并以固定的速率流出，当桶满并且当前流入的请求大于当前流出的请求时,限制请求。漏桶限流解决了计数器限流模式下流量突刺的问题，当服务器处理完请求后，只要能从漏桶中流出请求则能继续处理，不会造成长时间等待拒绝请求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/f6ecf8a7fa861aaa778003aca4b33240_739231-20201226170744065-1538511113.png&#34; alt=&#34;漏桶限流突发流量问题&#34; title=&#34;漏桶限流突发流量问题&#34;&gt;&lt;/p&gt;
&lt;p&gt;漏桶限流突发流量问题，如上图所示，漏桶满后此时大量请求到来，由于服务器已扩容可以满足请求处理，但是漏桶会拒绝大量请求，导致无法应对突发流量问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/bda6662d9e42d12336b6429c158d1d13_739231-20201226170825058-361750450.png&#34; alt=&#34;令牌桶限流&#34; title=&#34;令牌桶限流&#34;&gt;&lt;/p&gt;
&lt;p&gt;令牌token以固定的速率向桶中放入令牌直至桶满，在执行请求前需要先从桶中获取令牌，形式上也相当于队列，入队以固定速率，出对不受限制，这点与漏桶刚好相反。&lt;/p&gt;
&lt;p&gt;特点：可以应对突发流量，只要桶中有令牌即可执行请求。&lt;/p&gt;
&lt;h2 id=&#34;三golang语言层面实现限流算法&#34;&gt;三、golang语言层面实现限流算法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;简单计数器限流&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
 
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;sync&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;// CounterLimiter 简单计数器限流
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CounterLimiter&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Interval&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 重新计数时间
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 上一次请求时间
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;MaxCount&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 最大计数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Mutex&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;ReqCount&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 目前的请求数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;// NewCounterLimiter 初始化简单计数器限流
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewCounterLimiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;interval&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;maxCount&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CounterLimiter&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CounterLimiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;MaxCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;maxCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;      &lt;span class=&#34;nb&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Mutex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ReqCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;// counterLimit 简单计数器限流实现
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CounterLimiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;counterLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Lock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Unlock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Unix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Unix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Interval&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ReqCount&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ReqCount&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;MaxCount&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ReqCount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 定义1秒最多5个请求
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewCounterLimiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;counterLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;pass &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;limit &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Millisecond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;滑动窗口计数器限流&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
 
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;sync&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;// SlidingWindowLimiter 滑动窗口计数器限流
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SlidingWindowLimiter&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Interval&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 总计数时间
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 上一个窗口时间
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Mutex&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 锁
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;WinCount&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// 窗口中请求当前数量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;TicketSize&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 窗口最大容量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;TicketCount&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 窗口个数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;CurIndex&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 目前使用的窗口下标
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;// NewSlidingWindowLimiter 初始化滑动窗口计数器限流
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewSlidingWindowLimiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;interval&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ticketCount&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ticketSize&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SlidingWindowLimiter&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SlidingWindowLimiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;TicketSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;ticketSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;TicketCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ticketCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;WinCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;    &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ticketSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ticketSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;CurIndex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;    &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;         &lt;span class=&#34;nb&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Mutex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;// slidingCounterLimit 滑动窗口计数器限流实现
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SlidingWindowLimiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;slidingCounterLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Lock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Unlock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;eachTicketTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Interval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TicketCount&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 如果间隔时间超过一个窗口的时间 当前窗口置0 指向下一个窗口
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Unix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Unix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;eachTicketTime&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;WinCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CurIndex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CurIndex&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CurIndex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TicketCount&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;当前窗口:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CurIndex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 当前窗口未满则正常计数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;WinCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CurIndex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TicketSize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;WinCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CurIndex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 定义1秒10个时间窗口 每个窗口大小为1  即1秒10个请求
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewSlidingWindowLimiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;slidingCounterLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;pass &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;limit &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Millisecond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;漏桶限流&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
 
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;math&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;sync&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;// TokenBucket 定义令牌桶结构
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TokenBucket&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 当前请求时间
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Capacity&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 桶的容量（存放令牌的最大量）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Rate&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 令牌放入速度
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Tokens&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// 当前令牌总量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Mutex&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;// NewTokenBucket 初始化TokenBucket
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewTokenBucket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;rate&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cap&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TokenBucket&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TokenBucket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Capacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Rate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;     &lt;span class=&#34;nb&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;rate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Tokens&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;nb&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;      &lt;span class=&#34;nb&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Mutex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;// getToken 判断是否获取令牌（若能获取，则处理请求）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TokenBucket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Lock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Lck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Unlock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 先添加令牌
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Capacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tokens&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Seconds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Rate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tokens&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 若桶中一个令牌都没有了，则拒绝
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 桶中还有令牌，领取令牌
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LastTime&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 初始化 限制每秒2个请求 令牌桶容量为5
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;NewTokenBucket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;pass &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;limit &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Millisecond&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;四nginx限流及实现&#34;&gt;四、nginx限流及实现&lt;/h2&gt;
&lt;p&gt;Nginx 提供了两种限流手段：一是控制速率，二是控制并发连接数。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;控制速率
我们需要使用 limit_req_zone 用来限制单位时间内的请求数，即速率限制，示例配置如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;k&#34;&gt;limit_req_zone&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$binary_remote_addr&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;zone=mylimit:10m&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;rate=2r/s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;location&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kn&#34;&gt;limit_req&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;zone=mylimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;limit_req zone=mylimit方案：
以上配置表示，限制每个 IP 访问的速度为 2r/s，因为 Nginx 的限流统计是基于毫秒的，我们设置的速度是 2r/s，转换一下就是 500ms 内单个 IP 只允许通过 1 个请求，从 501ms 开始才允许通过第 2 个请求。
我们使用单 IP 在 10ms 内发并发送了 6 个请求的执行结果如下：
从以上结果可以看出他的执行符合我们的预期，只有 1 个执行成功了，其他的 5 个被拒绝了（第 2 个在 501ms 才会被正常执行）。
表现为对收到的请求无延时  超过访问频率则503&lt;/p&gt;
&lt;p&gt;limit_req zone=mylimit burst=3方案：
上面的速率控制虽然很精准但是应用于真实环境未免太苛刻了，真实情况下我们应该控制一个 IP 单位总时间内的总访问次数，而不是像上面那么精确但毫秒，我们可以使用 burst 关键字开启此设置，示例配置如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;k&#34;&gt;limit_req_zone&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$binary_remote_addr&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;zone=mylimit:10m&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;rate=2r/s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;location&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kn&#34;&gt;limit_req&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;zone=mylimit&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;burst=3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;burst=3 表示每个 IP 最多允许3个突发请求，如果单个 IP 在 10ms 内发送 6 次请求的结果如下：
从以上结果可以看出，有 1 个请求被立即处理了，3 个请求被放到 burst 队列里排队执行了，另外 2被丢弃了。
超过了burst缓冲队列长度和rate处理能力的请求被直接丢弃
表现为对收到的请求有延时  所有请求排队&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;k&#34;&gt;limit_req&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;zone=mylimit&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;burst=3&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;nodelay方案：&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;location&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kn&#34;&gt;limit_req&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;zone=mylimit&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;burst=3&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;nodelay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果单个 IP 在 10ms 内发送 6 次请求的结果如下：
依照在limit_req_zone中配置的rate来处理请求,同时设置了一个大小为3的缓冲队列，
当请求到来时，会爆发出一个峰值处理能力，表示这3个请求立刻处理，对于峰值处理数量之外的请求，直接丢弃
缓冲队列按rate来释放
表现为对收到的请求无延时 缓冲已满则503&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/faf43724c7c7dc1efbdebcac934544c6_739231-20201229190348149-1614234430.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;控制并发数
这个模块用来限制单个IP的请求数。并非所有的连接都被计数，只有在服务器处理了请求并且已经读取了整个请求头时，连接才被计数。
利用 limit_conn_zone 和 limit_conn 两个指令即可控制并发数，示例配置如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;k&#34;&gt;limit_conn_zone&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$binary_remote_addr&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;zone=perip:10m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;limit_conn_zone&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$server_name&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;zone=perserver:10m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;limit_conn&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;perip&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;limit_conn&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;perserver&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 limit_conn perip 10 表示限制单个 IP 同时最多能持有 10 个连接；limit_conn perserver 100 表示 server 同时能处理并发连接的总数为 100 个。
只有当 request header 被后端处理后，这个连接才进行计数。&lt;/p&gt;
&lt;h2 id=&#34;五基于redis实现限流算法&#34;&gt;五、基于redis实现限流算法&lt;/h2&gt;
&lt;p&gt;对于上述限流算法目前已有很多成熟的第三方库实现了，但是对于分布式系统来说无法起到严格意义上的限流，因此基于redis以gin中间件的方式实现上述限流算法。&lt;/p&gt;
&lt;p&gt;滑动窗口计数器限流&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Limiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;UnixNano&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exists&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exists&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;username获取失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;KeyLimitArticleUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;RedisCon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Dial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;redis连接失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
    &lt;span class=&#34;c1&#34;&gt;//限制五秒一次请求
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;limit&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;int64&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;dura&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Second&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//删除有序集合中的五秒之前的数据
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ZREMRANGEBYSCORE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Sprint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dura&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Nanoseconds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;redis操作ZREMRANGEBYSCORE失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;reqs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;redisPool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ZCARD&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;reqs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;limit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;AbortWithStatusJSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusTooManyRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusTooManyRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;too many request&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
    &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ZADD&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;redis操作ZADD失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;EXPIRE&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dura&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;redis操作EXPIRE失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;漏桶限流&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// LeakyBucket redis实现漏桶限流
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;LeakyBucket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exists&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exists&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;username获取失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;KeyLeakyBucketArticleUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;RedisCon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Dial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;redis连接失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
    &lt;span class=&#34;nx&#34;&gt;rate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;                                                       &lt;span class=&#34;c1&#34;&gt;// 每秒2个请求
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;capacity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;                                                   &lt;span class=&#34;c1&#34;&gt;// 桶容量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;lastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;redisPool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hget&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;lastTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 上次请求时间
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Unix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;water&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rate&lt;/span&gt;                           &lt;span class=&#34;c1&#34;&gt;// 经过一段时间后桶流出的请求
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;redisPool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hget&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 上一次桶的余量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;water&lt;/span&gt;                                            &lt;span class=&#34;c1&#34;&gt;// 当前桶的余量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;capacity&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;capacity&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;lastTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 记录当前请求时间 秒为单位
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hset&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;lastTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hset&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
    &lt;span class=&#34;c1&#34;&gt;// 无空闲balance可用时 429状态码限流提示
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;AbortWithStatusJSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusTooManyRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusTooManyRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;too many request&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;令牌桶限流&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// BucketLimit redis实现令牌桶限流
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BucketLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exists&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exists&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;username获取失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;KeyBucketLimitArticleUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;RedisCon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Dial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusBadRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;redis连接失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
    &lt;span class=&#34;nx&#34;&gt;rate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;                                                       &lt;span class=&#34;c1&#34;&gt;// 令牌生成速度 每秒1个token
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;capacity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;                                                   &lt;span class=&#34;c1&#34;&gt;// 桶容量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;redisPool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hget&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;tokens&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// 桶中的令牌数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;lastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;redisPool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hget&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;lastTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 上次令牌生成时间
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Unix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
 
    &lt;span class=&#34;c1&#34;&gt;// 初始状态下 令牌数量为桶的容量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;existKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;redisPool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;exists&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;existKey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;capacity&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hset&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;lastTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;deltaTokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rate&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 经过一段时间后生成的令牌
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;deltaTokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;deltaTokens&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 增加令牌
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;capacity&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;capacity&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 请求进来了，令牌就减少1
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hset&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;lastTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hset&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;tokens&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tokens&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 
    &lt;span class=&#34;c1&#34;&gt;// 无空闲token可用时 429状态码限流提示
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;AbortWithStatusJSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusTooManyRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StatusTooManyRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;too many request&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;redis+lua实现线程安全的分布式限流算法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以令牌桶算法为例：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现流程图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/6b569a66801f26653f6fc5e0cdb29d92_739231-20201229185938486-1267489845.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定义lua脚本&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lua脚本实现令牌桶算法限流&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ScriptTokenLimit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rateLimit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redis.pcall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HMGET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;KEYS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lastTime&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;tokens&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lastTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rateLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tonumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rateLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;capacity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tonumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ARGV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tonumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ARGV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tonumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ARGV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;capacity&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;else&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deltaTokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;math.floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;deltaTokens&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;capacity&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;capacity&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;lastTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;redis.call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HMSET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;KEYS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lastTime&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lastTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;tokens&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tokens&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过lua脚本实现令牌桶算法限流&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LuaTokenBucket&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;通过&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lua脚本实现令牌桶算法限流&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LuaTokenBucket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redis.Conn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;capacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c.Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lua&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redis.NewScript&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ScriptTokenLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lua脚本中的参数为key和value&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redis.Bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lua.Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;capacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;限流中间件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LuaTokenBucket&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;通过&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lua脚本实现令牌桶算法限流&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LuaTokenBucket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redis.Conn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;capacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c.Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lua&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redis.NewScript&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ScriptTokenLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lua脚本中的参数为key和value&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redis.Bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lua.Do&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;capacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;六总结&#34;&gt;六、总结&lt;/h2&gt;
&lt;p&gt;计数器、漏桶、令牌桶算法限流有各自的特点及应用场景，不能单一维度地判断哪个算法最好。计数器算法实现简单，适用于对接口频次的限制，如防恶意刷帖限制等；漏桶限流适用于处理流量突刺现象，因为只要桶为空就可以接受请求；而令牌桶限流适用于应对突发流量，也是目前互联网架构中最常用的一种限流方式，只要能取到令牌即可处理请求。
nginx限流控制接口频次其实现方式实质上是用到了漏桶算法，如果是http请求并且使用了nginx作为反向代理，那么可以使用nginx作为流量入口限制的第一关。
在分布式场景下，一般选择使用redis来实现限流算法，配合lua脚本使得限流的判断是一个原子操作。&lt;/p&gt;
&lt;hr&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;本文转载于&lt;a href=&#34;https://www.cnblogs.com/FG123/p/13645431.html&#34;&gt;分布式系统限流算法分析与实现&lt;/a&gt; &lt;a href=&#34;https://ulovei.net/tech/distributed-system-a-algorithm/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/tech/">Tech</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/golang/">golang</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>懒是一种病</title>
                <link>https://ulovei.net/life/laziness-is-a-disease/</link>
                <guid isPermaLink="true">https://ulovei.net/life/laziness-is-a-disease/</guid>
                <pubDate>Tue, 26 Jan 2021 09:20:55 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;回首间,发现太多事前被落(la)下,才知道懒原来是一种病，而我已病入膏肓.&lt;/p&gt;
&lt;p&gt;声明变量时 &lt;code&gt;username&lt;/code&gt; (用户名) 我可以写成 &lt;code&gt;u&lt;/code&gt; , password(密码) 我能写成 &lt;code&gt;p&lt;/code&gt;  😂&lt;/p&gt;
&lt;p&gt;以至于，清楚缓存 都能这样写&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;//清除缓存 王者写法
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;javascript:void(0);&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;alert(&amp;#34;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;清除成功&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;清除缓存&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我这该死的散发魅力的脑壳😂&lt;/p&gt;
&lt;p&gt;不禁感慨：书到用时方恨少,事非经过不知难&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/laziness-is-a-disease/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;所以问题往往是从小事发生，bug 也是&lt;/p&gt;
&lt;hr&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;出自南宋词人陆游写的一副劝勉联，全文就这两句。原文：书到用时方恨少，事非经过不知难。释义：知识总是在运用时才让人感到太不够，许多事情如果不亲身经历过就不知道它有多难。启示我们平时应当勤学好问，等到真正用到知识时，才不会手忙脚乱地去翻书。 &lt;a href=&#34;https://ulovei.net/life/laziness-is-a-disease/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/life/">Life</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>ThinkPHP 开发：POST参数丢失</title>
                <link>https://ulovei.net/tech/thinkphp-post-param-lose/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/thinkphp-post-param-lose/</guid>
                <pubDate>Fri, 22 Jan 2021 09:20:55 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;在我们使用&lt;code&gt;Ajax&lt;/code&gt;请求后端&lt;code&gt;API&lt;/code&gt;时，如果数据量比较大，如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
data:{
	&amp;quot;type1&amp;quot;:1,
	&amp;quot;type4&amp;quot;:1,
	&amp;quot;type3&amp;quot;:1,
	//.....此处省略999999行
	&amp;quot;type999999&amp;quot;:1,
}

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会发现使用&lt;code&gt;input()&lt;/code&gt; 助手函数打印出来 可能打印到 &lt;code&gt;type3000&lt;/code&gt;,就没有数据了&lt;/p&gt;
&lt;p&gt;当你使用 &lt;code&gt;file_get_contents(&#39;php://input&#39;)&lt;/code&gt; 获取打印时你会发现参数没少，如果你把这个参数转成数组，就会引起php的报错&lt;/p&gt;
&lt;p&gt;这个是由于 php 配置文件中 限制了传值大小，默认的是3000字节大小&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;php.ini&lt;/code&gt; 搜索 &lt;code&gt;max_input_vars&lt;/code&gt; 按照自己的需求 修改大小&lt;/p&gt;
&lt;p&gt;修改完成之后 重启 &lt;code&gt;php-fpm&lt;/code&gt; 你会神奇的发现 参数取到了😉&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/php/">PHP</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/share/">Share</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>微信8.0版本来了</title>
                <link>https://ulovei.net/tech/wechat-new-version-8.0/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/wechat-new-version-8.0/</guid>
                <pubDate>Fri, 22 Jan 2021 09:20:55 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;2021微信公开课Pro版的微信之夜上，张小龙说表示，微信很多年没有做大的升级了，下一个版本的微信会有新的表情。&lt;/p&gt;
&lt;p&gt;他透露，下一个版本的微信，有诸如向人扔炸弹的表情的能力。&lt;/p&gt;
&lt;p&gt;果不其然，今晚上线的微信8.0版本，统统实现！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/a674bd35f65d5fdcb8a585e3a4f824a5_20210121223527.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;微信团队表示，为丰富大家在微信的表达方式，微信8.0对小表情进行了升级，当用户在聊天中发送或者接收单个小表情，会播放动画效果。部分小表情动画效果可全屏播放。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/9bcdd037395a6dcc3f63e418fee43b57_20210121223544.gif&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/c1add105209a8fe0cf77a190aec14e10_20210121223555.gif&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;在微信8.0版本中，一些一异想天开的想法变成了现实，比如和好友互仍炸弹，放满屏的烟花，发庆祝的礼花。&lt;/p&gt;
&lt;p&gt;小伙伴可以更新微信测试一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/8efe20ef0890ad6798d80c0758240014_oAAAAASUVORK5CYII=.png&#34; alt=&#34;img&#34; title=&#34;微信内测二维码&#34;&gt;&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/wechat/">WeChat</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/share/">Share</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>输入法？音乐？微信新版本将会有这几大功能</title>
                <link>https://ulovei.net/tech/wechat-new-version-several-functions/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/wechat-new-version-several-functions/</guid>
                <pubDate>Thu, 21 Jan 2021 16:20:55 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://ulovei.net/tech/wechat-new-version-several-functions/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;昨天在微信之夜现场，微信之父张小龙进行了一个半小时的演讲，分享了微信的日活数据、自己对产品的思考、以及对微信未来的一些展望。&lt;/p&gt;
&lt;p&gt;我虽然没有看直播，但是在直播结束后，还是仔细的把文字版《微信十年的产品思考》看了两遍，除了微信相关的信息之外，也收获了一些自己的思考。&lt;/p&gt;
&lt;h3 id=&#34;one-一组数据&#34;&gt;ONE 一组数据&lt;/h3&gt;
&lt;p&gt;到今天，每天——&lt;/p&gt;
&lt;p&gt;有10.9亿用户打开微信，3.3亿用户进行了视频通话；&lt;/p&gt;
&lt;p&gt;有7.8亿用户进入朋友圈，1.2亿用户发表朋友圈；&lt;/p&gt;
&lt;p&gt;有3.6亿用户读公众号文章，4亿用户使用小程序；&lt;/p&gt;
&lt;p&gt;还有很多，包括微信支付，企业微信，微信读书，搜索等，就不一一说了。如微信支付，它就像你以前的钱包一样，已经变成了生活常用品。而微信，也真的成为了“一个生活方式”。&lt;/p&gt;
&lt;p&gt;如此大的数据，在国内应该可以说是绝无仅有了，其它的国内超级APP的数据都还差了一大截，QQ为7.35亿，抖音为6亿，而支付宝只有4亿。&lt;/p&gt;
&lt;h3 id=&#34;two-视频号&#34;&gt;TWO 视频号&lt;/h3&gt;
&lt;p&gt;视频号是微信今年来的工作中心，迭代速度甚至可以和微信的头两年相比，关于视频号张小龙也聊了很多。&lt;/p&gt;
&lt;p&gt;视频号是一个人人都可创作的短内容平台。&lt;/p&gt;
&lt;p&gt;所以它是公开领域的内容平台，就不能基于微信号来创作了，因为微信账号是私人的ID，所以当你使用视频号的时候，还需要一个公开ID。&lt;/p&gt;
&lt;p&gt;而之前微信只有群直播功能而没有真正的直播功能也是因为微信号不足以承担直播的功能。&lt;/p&gt;
&lt;p&gt;此外还有视频号的推送机制，视频的播放量，关注，好友推荐，机器推荐的消耗比例，应该是1:2:10。即，一个人应该平均看10个关注的视频，20个朋友赞的视频，100个系统推荐的视频。&lt;/p&gt;
&lt;h3 id=&#34;three-一些有趣的实验性项目&#34;&gt;THREE 一些有趣的实验性项目&lt;/h3&gt;
&lt;p&gt;这些也就是微信未来的展望，张小龙经常会有一些异想天开的想法，之后就会对这些想法进行探索，但是只要思路的方向没有问题，就可以不断改进，最后就会被添加到微信中。&lt;/p&gt;
&lt;p&gt;如拍一拍就是这样诞生的，此外在新版本也会有相似好玩的功能的思考点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;表情，对着对方的微信扔出一个炸弹，对方的屏幕就裂开来，以此满足用户越来越强烈的情绪。&lt;/li&gt;
&lt;li&gt;微信状态，除了名字头像朋友圈视频号，未来微信的名片可能会添加更多东西，让用户通过随便说一句话，随便写几个字来表达自己的状态。&lt;/li&gt;
&lt;li&gt;歌曲，张小龙一直不太满意在微信里面听歌的体验不太好，同时不理解为什么所有播放器都是一个电唱机在转，他希望在听歌的时候可以看到更多的东西，比如把某一首歌变成一个制作得很精美的MV。&lt;/li&gt;
&lt;li&gt;输入法，由于经常收到用户聊天记录信息相关的投诉，而微信从来不会去分析用户的聊天记录，所以张小龙决定推出自己的只能输入法。&lt;/li&gt;
&lt;li&gt;浮窗，目前的浮窗只是提供了一个尚未看完的内容的列表，未来可能更强大。&lt;/li&gt;
&lt;li&gt;直播，当大多数人都有了视频号ID之后，微信就可能会上线真正的直播，附近的直播和人将改被修改为直播和附近。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;end-最后聊聊&#34;&gt;END 最后聊聊&lt;/h3&gt;
&lt;p&gt;对于微信将要推出的输入法和听歌，个人还是比较期待的，毕竟微信推出的产品一向都是小而美的。&lt;/p&gt;
&lt;p&gt;另外就是输入法泄露隐私这件事，这个个人是存疑的，因为并不是所有人都使用的是国产输入法，还有大量的使用iOS自带输入法、谷歌输入法或小众输入法的用户，个人对这些输入法的信任是要比微信要高的。&lt;/p&gt;
&lt;p&gt;如果有对张小龙的演讲感兴趣的，我把它放在了原文，点击阅读原文就能打开。&lt;/p&gt;
&lt;p&gt;最后也希望微信越来越好用吧。&lt;/p&gt;
&lt;hr&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;文章转自微信公众号（不恰柠檬） &lt;a href=&#34;https://ulovei.net/tech/wechat-new-version-several-functions/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/wechat/">WeChat</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/share/">Share</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>罗素: 浪漫、理性，与孤独</title>
                <link>https://ulovei.net/life/romance-reason-and-loneliness/</link>
                <guid isPermaLink="true">https://ulovei.net/life/romance-reason-and-loneliness/</guid>
                <pubDate>Wed, 20 Jan 2021 16:49:55 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;玛丽·雪莱&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;的《弗兰肯斯坦》（Frankenstein）是在阿尔卑斯山的浪漫情调的景色中与拜伦谈话的灵感启发下写成的，其内容几乎可以看成是一部寓言体的、预言性的浪漫主义发展史。弗兰肯斯坦的怪物并不像俗语中把他说的那样，是不折不扣的怪物，他最初也是个温良和善的生灵，渴望人间的柔情；但是，他打算得到一些人的爱，而他的丑陋倒激起那些人的恐怖，于是逼得他凶暴愤恨起来。这怪物隐着身形观察一家善良的贫苦小农，暗中帮助他们劳动。最后他决意让他们知道他:&lt;/p&gt;
&lt;p&gt;「我越多见他们，我要求得到他们的庇护和照顾的欲望越强；我的心渴望为这些温良可亲的人所认识，为他们所爱；看见他们把和美的容颜含情对着我，便是我的极度奢望了。我不敢想他们会怀着轻蔑和恐怖躲开我。」&lt;/p&gt;
&lt;p&gt;然而，他们真这样躲开了。于是他首先要求创造他的人创造一个类似他自己的女性，等这件事一遭到拒绝，他便致力把弗兰肯斯坦爱的所有人一个个杀害，不过，甚至在这时候，当他完成了全部杀害，眼盯着弗兰肯斯坦的尸首，那怪物的情操依然是高贵的:&lt;/p&gt;
&lt;p&gt;「这也是我的牺牲者！杀害了他，我罪恶满盈；我此身的这位可怜的守护神受伤到底了！哦，弗兰肯斯坦！你这宽宏大量、舍己为人的人啊！我现在求你饶恕我又有什么用？是我，毁灭了你所爱的一切人，因而无可挽救地毁灭了你。天哪！他冰凉了，他不能回答我的话……当我把我的可怕的罪孽总账浏览一遍时，我不能相信我还是从前那个在思想中对善德的美和尊严曾充满着崇高超绝的幻想的生灵。但事实正是如此；堕凡的天使成了恶毒的魔鬼。然而连神和人的那个仇敌在凄苦悲凉当中也有朋友伙伴；可是我孤单。」&lt;/p&gt;
&lt;p&gt;这种心理如果剔除掉浪漫主义形式，毫无不现实的地方，要想找类似的实例也不必要去搜寻重洋大盗或汪达尔人&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;的国王。旧德国废皇在窦恩&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;对来访的某个英国人慨叹英国人不再喜欢他了。伯特博士在他写的一本讲少年犯的书里&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;，提到有个七岁男孩把另一个男孩弄到瑞珍特运河里淹死。这孩子的理由是无论他一家人或他的同年辈的孩子们，对他全不表示爱。伯特博士以好意对待他，结果他成了一个有身分的公民；可是并没有一个伯特博士来担任改造弗兰肯斯坦的怪物。&lt;/p&gt;
&lt;p&gt;可怪罪的倒不是浪漫主义者的心理，而是他们的价值标准。他们赞赏强烈的炽情，不管是哪一类的，也不问它的社会后果如何。浪漫爱情，尤其在不如意的时候，其强烈足以博得他们的赞许；但是最强烈的炽情大部分都是破坏性的炽情: 如憎恶、怨忿和嫉妒，悔恨和绝望，羞愤和受到不正当压抑的人的狂怒，黩武热和对奴隶及懦弱者的蔑视。因此，为浪漫主义所鼓舞的、特别是为拜伦式变种的浪漫主义所鼓舞的那类人，都是猛烈而反社会的，不是无政府的叛逆者，便是好征服的暴君。&lt;/p&gt;
&lt;p&gt;浪漫主义观点所以打动人心的理由，隐伏在人性和人类环境的极深处。出于自利，人类变成了群居性的，但是在本能上一直依然非常孤独；因此，需要有宗教和道德来补充自利的力量。但是为将来的利益而割弃现在的满足，这个习惯让人烦腻， 所以炽情一激发起来，社会行为上的种种谨慎约束便难于忍受了。在这种时刻，推开那些约束的人由于内心的冲突息止而获得新的元气和权能感；虽然他们到末了也许会遭遇大不辛，当时却享受到一种登仙般的飞扬感，这种感受伟大的神秘主义者是知道的，然而仅仅有平凡德性的人却永远不能体验。于是他们天性中的孤独部分再度自现，但是如果理智尚存在，这自现必定披上神话外衣。神秘主义者和神合为一体，在冥想造物主时感觉自己免除了对同俦的义务，代表我们对事情和对同类的服从，对于成了神的人来讲不复存在；对于旁人，真理就是他所断定的，义务就是他所命令的。假使我们当真都能孤独地生活而且不劳动，大家全可以享受这种自主状态的销魂之乐；既然我们不能如此，这种乐处只有疯子和独裁者有份了。&lt;/p&gt;
&lt;p&gt;孤独本能对社会束缚的反抗，不仅是了解一般所谓的浪漫主义运动的哲学，政治和情操的关键，也是了解一直到如今这运动的后裔的哲学、政治和情操的关键。在德国唯心主义的影响下，哲学成了一种唯我论的东西，把自己发展宣布为伦理学的根本原理。关于情操，在追求孤独这件事与炽情和经济的必要之间，须作一个可厌的折衷。D. H. 劳伦斯（Lawrence）的小说《爱岛的人》（The Men Who Loved Islands）里的主人公鄙夷这种折衷越来越甚，最后冻饿而死，但他是享受着完全孤独而死去的；可是如此程度的言行一致那些颂扬孤独的作家们从来也没有达到过。文明生活里的康乐，隐士是无从获得的，想要写书或创作艺术作品的人，他在工作期间要活下去，就必须受人服事。为了依旧感觉孤独，他必须能防止服事他的人侵犯他的自我，假如那些人时奴隶，这一点最能够圆满完成。然而热烈的爱情却是个较为困难的问题。一对热情恋人只要被看作是在反抗社会桎梏，便受人的赞美；但是在现实生活中，恋爱关系本身很快地就成为一种社会桎梏，于是恋爱的对手倒被憎恨上了，如果爱情坚强，羁绊难断，旧憎恨得更加厉害。因此，恋爱才至于被人理解为一场战斗，双方各在打算破入对方的「自我」保护墙把他或她消灭。这种看法通过斯特林贝利（Stringberg）的作品，尤其还通过劳伦斯的作品，已经众所周知了。&lt;/p&gt;
&lt;p&gt;按这种感情方式讲，不仅热烈的爱情，而且连和别人的一切友好关系，只限于在能把别人看成是自己的「自我」的客观化的情况下才可能存在。若别人是血缘亲属，这看法就行得通，关系越近越容易做到。因此，人们强调氏族，结果就像托勒密家系&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;，造成族内通婚。这对拜伦起了怎样的影响，我们知道；瓦格纳在济克蒙特和济克琳徳的恋爱中&lt;sup id=&#34;fnref:7&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:7&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;中也流露出类似的感情。尼采喜欢他的妹妹胜过其她一切女子（固然没有丑事），他写给她的信里说: 「从你的一切所言所行，我真深切感觉我们属于一脉同根。你比旁人对我了解得多，因为我们是出于一个门第的。这件事和我的『哲学』非常调和。」&lt;/p&gt;
&lt;p&gt;民族原则是同一种「哲学」的推广，拜伦是它的一个主要倡导者。一个民族被假定成一个氏族，是共同祖先的后嗣，共有某种「血缘意识」。马志尼常责备英国人没给拜伦以正当的评价，他把民族设想成具有一个神秘的个性，而将其他浪漫主义者在英雄人物身上寻求的无政府式的伟大归给了民族。民族的自由不仅被马志尼看成是一种绝对的东西，而且比较稳重的政治家们也这样看了。这一来在实际上便不可能有国际合作了。&lt;/p&gt;
&lt;p&gt;对血统和民族的信仰，当然和反犹太主义连在一起。同时，浪漫主义观点一半因为是贵族观点，一半因为重热情、轻算计，所以万分鄙视商业和金融。于是浪漫主义观点宣称反对资本主义，这和代表无产阶级利益的社会主义者反对资本主义完全不同，因为前一种反对的基础是厌恶经济要务，这种反对又由于联想到资本主义世界由犹太人统治着而进一步增强。拜伦很难得偶尔也屈尊去注意像什么经济权力那种庸俗事，那时就表达出上述看法:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;谁掌握世界的平衡？谁统治
不论是保皇党的还是自由党的国会？
谁使西班牙的没有内衣的爱国者惊醒？
（这使旧欧洲的杂志全部叽叽喳喳起来）。
谁使旧世界和新世界处于痛苦
或欢乐之中？谁使政治都变得油嘴滑舌？
谁使拿破仑的英雄事业变成幽灵？——
犹太人罗斯柴尔德&lt;sup id=&#34;fnref:8&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:8&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;和他的基督教友培林&lt;sup id=&#34;fnref:9&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:9&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;9&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;诗句也许不大铿锵悦耳，但是感情十足是现代感情，所有拜伦的信徒向来都发出了回响共鸣。&lt;/p&gt;
&lt;p&gt;浪漫主义运动从本质上讲目的在于把人的人格从社会习俗和社会道德的束缚中解放出来。这种束缚一部分纯粹是给相宜的活动加的无益障碍，因为每个古代社会都曾经发展一些行为规矩，除了说它是老传统而外，没有一点可恭维的地方。但是，自我中心的热情一旦放任，就不易再叫它服从社会的需要。基督教多少算是做到了对「自我」的驯制，但是经济上、政治上和思想认识上的种种原因刺激了对教会的反抗，而浪漫主义运动把这种反抗带入了道德领域里。由于这运动鼓励一个新的狂纵不法的自我，以致不可能有社会协作，于是让它的门徒面临无政府状态或独裁政治的抉择。自我主义在起初让人们指望从别人得到一种父母般的温情；但是，他们一发现别人有别人的自我，感到愤慨，求温情的欲望落了空，便转成为憎恶和凶恶。人不是孤独不群的动物，只要社会生活一天还在，自我实现就不能算伦理的最高原则。&lt;sup id=&#34;fnref:10&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:10&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;10&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&#34;fnref:11&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fn:11&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;11&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;本文转自一休儿 &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;玛丽·雪莱（Mary Shelley，1791—1851），本名玛丽·葛德汶（Mary Godwin），诗人雪莱的第二妻，1816 年同雪莱一起在瑞士认识了拜伦。——译者 ↩︎ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;五世纪时掠夺罗马，破坏其文化的一个野蛮民族。——译者 ↩︎ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;窦恩（Doorn）时荷兰中部于特雷赫（Utrecht）东南的一个村，威廉二世退位后居住在那里。——译者 ↩︎ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;伦敦的一条运河。——译者 ↩︎ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;托勒密家系（the Ptolemys）是亚历山大大帝死后统治埃及的一个王朝（公元前 323 年—公元前 30 年）；托勒密二世娶了他的亲姊。——译者 ↩︎ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:7&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;瓦格纳（Wilhelm Richard Wagner，1813—83），德国作曲家，近代歌剧的创始者。济克蒙特（Siegmund）和济克琳德（Sieglinde）是瓦格纳所作的歌剧《尼伯龙的戒指》（Der Ring des Nibelungen）中的神话人物，他们是兄妹，两人结婚，生了著名的英雄济克弗里特（Siegfried）。——译者 ↩︎ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:7&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:8&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;罗斯柴尔德（Meyer Anselm Rothschild，1743—1812），德籍犹太人，国际金融资本家，在欧洲各国拥有庞大的势力。——译者 ↩ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:8&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:9&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;培林（Francis Baring，1740—1810），英国大银行家，当时公认为全欧第一巨商，曾任东印度公司主席。这首诗是拜伦的《唐璜》（Don Juan）里的一节。中译引自: 《唐璜》，朱维基译，上海文艺出版社 1959 年版，第 747 页。——译者 ↩︎ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:9&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:10&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;罗素: 《西方哲学史》（何兆武、李约瑟、马元德译），《汉译世界学术名著丛书》，商务印书馆，1963 年版，卷三: 近代哲学，第二篇: 从卢梭到现代，第十八章: 浪漫主义运动。 ↩︎ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:10&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:11&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;自拟的标题。——一休儿 ↩︎ &lt;a href=&#34;https://ulovei.net/life/romance-reason-and-loneliness/#fnref:11&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/life/">Life</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/excerpt/">Excerpt</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>关于QQ读取Chrome历史记录的澄清</title>
                <link>https://ulovei.net/tech/qq-read-chrome-history/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/qq-read-chrome-history/</guid>
                <pubDate>Mon, 18 Jan 2021 16:49:55 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://ulovei.net/tech/qq-read-chrome-history/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;今天看到群里有同学发了一篇v2ex上的帖子&lt;a href=&#34;https://www.v2ex.com/t/745030&#34;&gt;传送门&lt;/a&gt;，说QQ会读取Chrome的历史记录，被火绒自定义规则拦截了，本来我是不信的，但是他说他复现了，而且是QQ登录10分钟后才会去访问。&lt;/p&gt;
&lt;p&gt;这我就想去验证下了，开虚拟机装&lt;code&gt;QQ&lt;/code&gt;、&lt;code&gt;Chrome&lt;/code&gt;，然后打开&lt;code&gt;Process Monitor&lt;/code&gt;开始等。规则简单的过滤下
&lt;img src=&#34;https://ulovei.net/images/273bb1482c6a6b66a9df4a1c32c6a6f5_873391_DJ94X9WVG4MBTWR.png&#34; alt=&#34;img&#34;&gt;
果然看到了读取AppData\Local\Google\Chrome\User Data\Default\History等目录的操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/fbca2191bb3224fdd5aba54ded866242_873391_W68XZTFJANKMN69.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;而且时间也是恰到好处的十分钟。
&lt;img src=&#34;https://ulovei.net/images/29074773bb217d55f52ff77c741ac4f6_873391_FWD8MPBYN2VRD3G.png&#34; alt=&#34;img&#34;&gt;
这是实锤了QQ和Chrome过不去啊，这我可不信，把规则去掉，重新翻了一下才发现果然是冤枉QQ了啊。
&lt;img src=&#34;https://ulovei.net/images/3e39c31f89094c2cb792c2614f5f6c1a_873391_AGXY96FE877JTJU.png&#34; alt=&#34;img&#34;&gt;
受害人之多令人震惊，仔细一看，这玩意是遍历了&lt;code&gt;Appdata\Local\&lt;/code&gt;下的所有文件夹，然后加上&lt;code&gt;User Data\Default\History&lt;/code&gt;去读啊。&lt;code&gt;User Data\Default\History&lt;/code&gt;是谷歌系浏览器（火狐等浏览器不熟，不清楚目录如何）默认的历史纪录存放位置，Chrome中枪也就很正常了。&lt;/p&gt;
&lt;p&gt;然后就该研究研究QQ为啥要这么干了，读取到的浏览器历史记录又拿来干啥了呢？&lt;/p&gt;
&lt;p&gt;挂上x32dbg，动态调试找到位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/31dd7806e80505ceb4910a747bea7dc2_873391_C2KUMY3YXHM4B37.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后去IDA里直接反编译出来，如下（位置在&lt;code&gt;AppUtil.dll&lt;/code&gt;中 &lt;code&gt;.text:510EFB98&lt;/code&gt; 附近）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/e1d157fa7fbc998d78b5aa004acf89bc_873391_5HHXWXCZHYAZ4RH.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;这一段的逻辑还是很好看懂的，先读取各种 &lt;code&gt;User Data\Default\History&lt;/code&gt; 文件，读到了就复制到Temp目录下的&lt;code&gt;temphis.db&lt;/code&gt;。回去看下&lt;code&gt;Procmom&lt;/code&gt;，果然没错。
&lt;img src=&#34;https://ulovei.net/images/8356367406bc87a768ecc5ac16776bda_873391_3CRMBX6H9ENTZ6B.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;再之后的操作就简单了，SQLite读取数据库，然后&lt;code&gt;“select url from urls”&lt;/code&gt;，这是在干什么大家都懂哈。后面就不接着讲了，有兴趣的可以自己接着看。&lt;/p&gt;
&lt;p&gt;结论，QQ并不是特意读取Chrome的历史记录的，而是会试图读取电脑里所有谷歌系浏览器的历史记录并提取链接，确认会中招的浏览器包括但不限于Chrome、Chromium、360极速、360安全、猎豹、2345等浏览器。&lt;/p&gt;
&lt;p&gt;晚上来编辑一下，刚才去试了下TIM，果然经典重现，而且比QQ还离谱，不多说直接上图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/12cac0da388e424ce2f8792b9caa8dc0_873391_W44WFBHCYKMC3PX.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/98b4ab82eb32c629224b95a2525b6e98_873391_FY3MV2SM35XPDR2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;「所以，我们的浏览器浏览啥，马哥都知道，强！」&lt;/p&gt;
&lt;p&gt;附上工具&lt;strong&gt;禁止&lt;/strong&gt;QQ获取 浏览器记录&lt;/p&gt;
&lt;p&gt;本软件可禁止腾讯获取你的隐私数据，只适用于&lt;code&gt;QQ9.0&lt;/code&gt;以后的版本，放入Bin目录运行应用即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/49fb9c83540d5a1f62406c4caae2f2b0_1610941136106159.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载链接:&lt;a href=&#34;https://xiaodao.lanzous.com/b0dqke0cb&#34;&gt;传送门&lt;/a&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;https://ulovei.net/tech/qq-read-chrome-history/#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;本文转载于 &lt;code&gt;看雪论坛&lt;/code&gt;:&lt;a href=&#34;https://bbs.pediy.com/thread-265359.htm&#34;&gt;原文链接&lt;/a&gt;。 &lt;a href=&#34;https://ulovei.net/tech/qq-read-chrome-history/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;工具开发者为 &lt;a href=&#34;https://52pojie.cn&#34;&gt;吾爱破解:云在天(Harry)&lt;/a&gt; 。 &lt;a href=&#34;https://ulovei.net/tech/qq-read-chrome-history/#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/software/">Software</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/share/">Share</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>2020年流氓软件大赛</title>
                <link>https://ulovei.net/tech/2020-rogue-software/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/2020-rogue-software/</guid>
                <pubDate>Fri, 01 Jan 2021 23:49:55 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;2020年已经过度到2021年啦，不知道从什么时候开始，电脑上面的软件也一样为了提醒我们，弹窗，桌面修改图标，网页提示，应有尽有，下面有请参加今年比赛的流氓软件入场，究竟是谁能取得今年流氓大赛第一呢，我们拭目以待。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1wps&#34;&gt;1.WPS&lt;/h3&gt;
&lt;p&gt;他来了他来了，只见WPS携带了一个热点弹窗，悄悄的走来了，弹窗为每天弹出一次，用户能直接关闭，但是只能设置一周内不再显示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/wps.webp&#34; alt=&#34;WPS.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;加分项：&lt;/p&gt;
&lt;p&gt;不允许永久关闭 加分&lt;/p&gt;
&lt;p&gt;关闭选项隐藏非常深 加分&lt;/p&gt;
&lt;p&gt;最终得分，3分&lt;/p&gt;
&lt;h3 id=&#34;2迅雷&#34;&gt;2.迅雷&lt;/h3&gt;
&lt;p&gt;迅雷是老广告了，但是由于新版本的迅雷X，采用了electron开发，弹窗功能受限制，所有广告只能写到浏览器里面，弹窗广告力度不大。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/05adc53ef87756f852917913bfe6cab7_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;xl01&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/2c6e3ee98e3504c4fc399e24ba743982_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;xl02&#34;&gt;&lt;/p&gt;
&lt;p&gt;用一会，弹右下角广告，并且右下角弹窗窗口无法关闭，这点&lt;strong&gt;好评&lt;/strong&gt;
&lt;img src=&#34;https://ulovei.net/images/884b04a73987bb738523d28d9b48ff06_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;xl03&#34;&gt;&lt;/p&gt;
&lt;p&gt;加分项&lt;/p&gt;
&lt;p&gt;右下角弹窗 加分&lt;/p&gt;
&lt;p&gt;没有关闭设置 加分&lt;/p&gt;
&lt;p&gt;广告太单调 减分&lt;/p&gt;
&lt;p&gt;最终得分 1分&lt;/p&gt;
&lt;h3 id=&#34;3360系列&#34;&gt;3.360系列&lt;/h3&gt;
&lt;p&gt;首先，360安全浏览器来了，拥有超过3亿用户的360，不来点广告怎么行呢，默认360导航，网页广告不算多，一刀999级仅仅显示在右边侧边，热点新闻动画广告好评，引起用户的注意。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/63f5637d9dd8fba2d4cc6095a782f537_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;360_1&#34;&gt;&lt;/p&gt;
&lt;p&gt;顶部搜索热词排行，推送精华广告词，排在第一位，清晰明了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/c578cade1dc8b6a8d89cb60385b94b3b_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;360_2&#34;&gt;&lt;/p&gt;
&lt;p&gt;侧边广告，无法切换，允许删除，差评。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/611cf8a80b225620f4712fae2a4f5e15_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;360_2&#34;&gt;
状态栏今日优选文字广告，弹新窗口，但是需要手动点击，差评。&lt;/p&gt;
&lt;p&gt;底部文字新闻广告，轮流滚动，吸引注意力，好评。
&lt;img src=&#34;https://ulovei.net/images/ac69523d5f4a13c3d4acb6e8ae97b965_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.webp&#34; alt=&#34;360_2&#34;&gt;&lt;/p&gt;
&lt;p&gt;引导用户进入旗下新闻网站，并且满屏广告加弹窗广告，除了内容，其他都是广告，好评。&lt;/p&gt;
&lt;p&gt;并且右边状态栏再次赠送热点资讯和头条推荐，好评。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/824cb9eefe03eeb167819bbc635b608f_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.webp&#34; alt=&#34;360_2&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置里面修改主页和关闭侧边栏与状态栏以后，用户无聊没有广告看，可以每天打开弹窗广告，并且次数很多次，但是遗憾的是可以设置不再弹出，差评。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/97629260afe21215d29807f0faa8d7b2_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;360_2&#34;&gt;&lt;/p&gt;
&lt;p&gt;旗下鲁大师软件，集成软件推荐，游戏精选，快速借钱，底部一刀999级等功能，效果不错，一不小心就打开了网址，好评。
&lt;img src=&#34;https://ulovei.net/images/5d6bde69a00b17e870df7d16f11881e0_640_wx_fmt=gif&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1.gif&#34; alt=&#34;360_2&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/a1bd417cc32478f60ea3e10bd775c1f2_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;360_2&#34;&gt;
附赠弹窗广告，本窗口比较有新意，广告页面直接头部大图标出，这等VIP广告席位，用户想不注意都难，好评。但是可以选择不再弹出，无法一直给用户看广告，差评。
&lt;img src=&#34;https://ulovei.net/images/9faab7d9c48d417050b6c8b5ef83e1dc_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;360_2&#34;&gt;
看来360不愧是360，旗下两大热门软件都比较适合用户的胃口，花式弹窗，界面上有各种各样的广告，文字，图片都不落下。&lt;/p&gt;
&lt;p&gt;所以这次360得分&lt;strong&gt;6分&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;4--2345&#34;&gt;4.  2345&lt;/h3&gt;
&lt;p&gt;2345广告方面并没有学到大数字家的精髓，只是简单的弹窗，并且可以关闭。&lt;/p&gt;
&lt;p&gt;而且弹窗的页面，里面吸引人的广告并不多，不适合用户的胃口。
&lt;img src=&#34;https://ulovei.net/images/97be4f95570a4b2461ed35ef2b9b55dc_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;img&#34;&gt;
软件有一个新奇的创意，那就是桌面广告图标，时不时直接创建一个图标，诱导用户点击，好评。
&lt;img src=&#34;https://ulovei.net/images/b35713cfd05e8938e1b0702e8420e4fc_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;img&#34;&gt;
实际上2345不靠这个广告赚钱，单单的广告弹窗，不足以支撑起这么大个公司。底牌在2345联盟，只要安装2345的软件，那些装机员就有钱拿，谁会和钱过不去呢？
2345只要被设置为首页，普通用户很难解除。
&lt;img src=&#34;https://ulovei.net/images/89f12485e9666536455a27ecc62a68fb_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;img&#34;&gt;
最终得分：&lt;strong&gt;5分&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;5flash&#34;&gt;5.flash&lt;/h3&gt;
&lt;p&gt;flash被Adobe抛弃了，但是被我们国家的公司捡破烂捡来了，由于我们国家目前无法摆脱flash，所以所有安装flash的电脑都能收到广告弹窗。&lt;/p&gt;
&lt;p&gt;这个广告就太简单了，直接不再弹出即可，但是flash程序会一直后台驻留，无法关闭，时时刻刻监控着你的电脑，这一点好评。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/d7f3c76084834ee40fa69498ca576718_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;功能太简单，恶心不了多少用户，但是影响力巨大，并且很多浏览器直接就安装了，所以这个打分给4分。&lt;/p&gt;
&lt;h3 id=&#34;6搜狗&#34;&gt;6.搜狗&lt;/h3&gt;
&lt;p&gt;今年的搜狗是一匹黑马，不知道是不是360以前的广告部加入了他们或者是阿里爸爸给的钱实在是太多了，搜狗广告推送方面遥遥领先。&lt;/p&gt;
&lt;p&gt;先看浏览器，进入浏览器，满屏特效，气球618，让人忍不住的像点击，首页顶部超长横幅，让人不注意都难，天气旁边，搜索旁边，无不例外的写着618红包，看来这次被包养的明明白白。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/acbb9f044d1e7212d9ae64a638965473_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/5d6bde69a00b17e870df7d16f11881e0_640_wx_fmt=gif&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1.gif&#34; alt=&#34;360_2&#34;&gt;&lt;/p&gt;
&lt;p&gt;再看搜狗输入法，这个月登上了杀毒软件恶意排行榜的名单，火绒专门为搜狗输入法写了一篇分析报告，不管是功能上，还是技术上，都可以称得上是顶级。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;右下角弹窗&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个是非常常规的操作了，由于技术上的原因，本弹窗和主程序写在同一个文件，就算是用绿色版本都无法幸免，右下角弹&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;弹窗照样推送&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;推送浏览器等自家软件，无法关闭，好评
&lt;img src=&#34;https://ulovei.net/images/92f119f85dd683b57197ed924359232d_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.png&#34; alt=&#34;img&#34;&gt;
今日热点右下角弹窗，可以关闭，差评
&lt;img src=&#34;https://ulovei.net/images/a5debdfeca5e4bd42120c77aded68a3a_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.webp&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;托盘图标弹窗&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;点击就直接打开网页，无法关闭，没有窗口，用户忍不住的想点击，并且5小时弹窗一次，刺激又舒服，不容易找到进程和程序文件，加大排查难度，好评。
&lt;img src=&#34;https://ulovei.net/images/a872f646871b5e96d91ebb98abbc6afd_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.webp&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;收集用户信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据火绒软件报告：&lt;/p&gt;
&lt;p&gt;解密并读取配置信息无误之后，showInfo.exe模块便会收集：系统硬件签名、主机运行的安全软件等信息，还会收集Chrome内核浏览器和IE浏览器的历史记录信息，连同搜狗输入法的版本信息一起回传
&lt;img src=&#34;https://ulovei.net/images/c522da3419ba7e1bb463203e47414f68_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.webp&#34; alt=&#34;img&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/8c816f5d7d86f078e333a6350a806483_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.webp&#34; alt=&#34;img&#34;&gt;
&lt;img src=&#34;https://ulovei.net/images/22d777599ac10ad7f06623cddc0cf164_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.webp&#34; alt=&#34;img&#34;&gt;
并且程序广告程序删除以后，弹出错误提示，引导用户重新安装。
&lt;img src=&#34;https://ulovei.net/images/e146ba242b20971fed9432c964d659f6_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.webp&#34; alt=&#34;img&#34;&gt;
强制弹窗广告，收集用户信息，生成用户画像，精准推送广告，这些加分项，实在是高，是其他流氓软件学习的对象，希望其他的流氓软件跟进学习，这样才能最大限度的收割用户，给公司带来最大的收入。
最终得分：&lt;strong&gt;10分&lt;/strong&gt;
&lt;img src=&#34;https://ulovei.net/images/5d6bde69a00b17e870df7d16f11881e0_640_wx_fmt=gif&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1.gif&#34; alt=&#34;360_2&#34;&gt;
这儿我代表全体使用绿色软件的用户，为搜狗鼓掌，你是流氓软件里面的骄傲，希望搜狗一系列软件，再出点安全卫士之类的软件，让全家桶驻留在用户电脑，努力提高进程权限，保护好自己，以免被其他的杀毒软件干掉。
&lt;img src=&#34;https://ulovei.net/images/a9965b8cc64f46be2dc04c291f0509a0_640_wx_fmt=png&amp;amp;tp=webp&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1.webp&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;今年的流氓软件软件评比大会，到此结束，感谢各位参与流氓软件评比的软件，再接再厉，争取明年，在恶心用户，拖慢电脑上面更上一层楼！&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/software/">Software</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/share/">Share</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>方法工具论</title>
                <link>https://ulovei.net/tech/wheels/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/wheels/</guid>
                <pubDate>Thu, 17 Dec 2020 23:49:55 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;很多伟人喜欢写忏悔录，很多现代人喜欢设计工作流程，以践行自己的方法工具论，并渴望分享给别人，甚至将之也生产化。&lt;/p&gt;
&lt;p&gt;通过时间规划，通过空间归类，通过时空关联。这个现代人，为了逃避互联网的信息压迫，为了远离互联网的社交压力，决心要将一克变成百万分之一吨——以伟大渺小，决心要从网络断为大西洋之孤岛——以慰藉心灵。关联是质量湮灭，归类是银河定律，规划是万有引力。有了这样的工作流程，这个现代人，总是如此踏实，总是如此满足，总是如此稳定。稳定中迭代，迭代中进化。&lt;/p&gt;
&lt;p&gt;伟人的忏悔录留了下来，而现代人留下了一个又一个轮子——「哈哈哈！」——这个远古人捧腹大笑——「一样！一样！三个一样！」&lt;/p&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/critique/">critique</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/ideas/">ideas</category>
                                
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/aphorism/">aphorism</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>带叶子的胡萝卜</title>
                <link>https://ulovei.net/life/carrots-with-leaves/</link>
                <guid isPermaLink="true">https://ulovei.net/life/carrots-with-leaves/</guid>
                <pubDate>Fri, 20 Nov 2020 20:54:21 &#43;0800</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description>&lt;p&gt;&lt;img src=&#34;https://ulovei.net/images/carrots-with-leaves.jpg&#34; alt=&#34;carrots-with-leaves.jpg&#34; title=&#34;🥕&#34;&gt;&lt;/p&gt;
&lt;p&gt;久未见过感受过如此美的植物了！想到「胡萝卜」一词，大脑中先浮现的画面是纯橙色的锥体，然后是炒熟后的口感。正是如此，当我一瞥到这等美物时，视线就被吸引了过去，定住了。&lt;/p&gt;
&lt;p&gt;我想，如果让我去卖菜，我绝对不会把叶子去除，一来带叶子的胡萝卜是如此之美，二来叶子虽轻但也有重量。我又想，当它们被迫分离的时候，一定是一个悲伤的故事吧。叶子哭着「我不能没有你」，萝卜也留着泪「我也不能没有你」。&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;https://ulovei.net/life/carrots-with-leaves/#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;文章转自一休儿&lt;a href=&#34;https://io-oi.me/life/carrots-with-leaves/&#34;&gt;带叶子的胡萝卜&lt;/a&gt; &lt;a href=&#34;https://ulovei.net/life/carrots-with-leaves/#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/life/">life\</category>
                            
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://ulovei.net/tags/interesting/">interesting</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title></title>
                <link>https://ulovei.net/tech/%E8%AE%B0win10pc%E7%94%B5%E8%84%91%E6%8F%92%E5%85%A5%E8%80%B3%E6%9C%BA%E6%B2%A1%E7%94%A8/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/%E8%AE%B0win10pc%E7%94%B5%E8%84%91%E6%8F%92%E5%85%A5%E8%80%B3%E6%9C%BA%E6%B2%A1%E7%94%A8/</guid>
                <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                    
                
            </item>
        
            <item>
                <title></title>
                <link>https://ulovei.net/tech/%E8%AE%B0%E4%B8%80%E6%AC%A1tp5%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</link>
                <guid isPermaLink="true">https://ulovei.net/tech/%E8%AE%B0%E4%B8%80%E6%AC%A1tp5%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/</guid>
                <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
                
                    <author>ali@ulovei.net (LouisWang)</author>
                
                <copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
                
                    <description></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="https://ulovei.net/tech/">tech\</category>
                            
                        
                    
                
                
                
                    
                        
                    
                
            </item>
        
    </channel>
</rss>
